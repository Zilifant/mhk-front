{"version":3,"sources":["hooks/http-hook.js","context/contexts.js","hooks/form-hook.js","util/validators.js","util/utils.js","components/ui-elements/Input.jsx","components/modal/Backdrop.jsx","components/modal/Modal.jsx","components/ui-elements/Button.jsx","components/modal/ErrorModal.jsx","components/shared/Grid.jsx","components/shared/Container.jsx","components/lobby/JoinThisLobby.jsx","components/shared/Loading.jsx","hooks/game-hook.js","components/lobby/main/Info.jsx","components/lobby/main/nogame/Member.jsx","components/lobby/main/nogame/MemberList.jsx","components/lobby/main/nogame/TimerSetup.jsx","components/lobby/main/nogame/Setup.jsx","hooks/multi-selector.js","components/lobby/main/game/GhostCard.jsx","components/lobby/main/game/Ghost.jsx","hooks/parallel-selector.js","components/lobby/main/game/Card.jsx","components/lobby/main/game/Cards.jsx","components/lobby/main/game/Player.jsx","components/lobby/main/game/Players.jsx","components/lobby/main/game/BasicUI.jsx","components/lobby/main/game/KIllerUI.jsx","hooks/chat-hook.js","util/styled-text.js","components/lobby/chat/ChatMessage.jsx","components/lobby/main/Announcer.jsx","components/lobby/main/game/Timer.jsx","components/lobby/main/Main.jsx","components/lobby/chat/ChatFeed.jsx","components/lobby/chat/NewMessage.jsx","components/lobby/chat/Chat.jsx","components/shared/Dev.jsx","components/lobby/Lobby.jsx","hooks/io-hook.js","components/lobby/Foyer.jsx","components/shared/Header.jsx","components/landing/NewLobby.jsx","components/landing/JoinLobby.jsx","components/landing/Landing.jsx","App.jsx","hooks/user-hook.js","index.jsx"],"names":["useHttpClient","useState","isLoading","setIsLoading","undefined","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","credentials","response","json","responseData","filter","reqCtrl","ok","console","log","message","Error","useEffect","forEach","abortCtrl","abort","clearError","UserContext","React","createContext","userId","userName","myLobby","isLeader","checkMyLobby","updateUserCtx","checked","SocketContext","socket","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","id","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_LETTERS_ONLY","VALIDATOR_REQUIRE","VALIDATOR_MAXLENGTH","val","VALIDATOR_LETTERS_ONLY","validate","validators","validator","trim","length","test","randomName","names","name","Math","floor","random","toUpperCase","slice","GAME_OUTCOMES","redwin","redwin_accomplice","redwintimeout","redwintimeout_accomplice","redwinwitnessdead","redwinwitnessdead_accomplice","bluewin","bluewinwitnessalive","getThisPlayer","game","thisPlayer","spectators","some","sp","find","role","players","player","viewingAs","lobbyMethods","text","WAIT_PLAYERS_JOIN","LOBBY_FULL","WAIT_PLAYERS_READY","WAIT_START_GAME","iAmLeader","NOTE_CHOOSE_GHOST","NOTE_MIN_ADVROLES","NOTE_REC_ADVROLES","WARN_WITNESS","WARN_ACCOMPLICE","NOTE_ENABLE_ADVROLES","numOnline","this","users","u","isOnline","numReady","isReady","usersOnline","usersReady","canUseAdvRoles","minPlayersOnline","minPlayersReady","allPlayersReady","canStart","startGameText","advRolesEnText","advRolesRecText","gameSettings","hasWitness","hasAccomplice","badge","canAccuse","article","inputReducer","isTouched","Input","props","initialValue","initialValid","inputState","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","className","noInvalidStyle","rows","Fragment","htmlFor","label","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","style","headerClass","header","onSubmit","preventDefault","contentClass","children","footerClass","footer","Modal","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","to","exact","disabled","ErrorModal","onClear","Grid","Container","JoinThisLobby","lobbyId","useContext","history","useHistory","inputHandler","JoinThisLobbySubHandler","process","JSON","stringify","lobbyURL","user","errorText","Loading","asOverlay","color","useGame","startGameHandler","emit","settings","clearGameHandler","nextRoundHandler","readyHandler","toggleHandler","toggledItem","chooseTimerHandler","duration","assignGhostHandler","chooseKeyEvHandler","keyEv","accusationHandler","accusalEv","accusedId","accusation","accuserSID","killWitnessHandler","targetId","chooseClueHandler","clue","replaceGhostCardHandler","cardId","giveLeaderHandler","newLeaderId","Info","gameOn","stage","lobbyIdHidden","setLobbyIdHidden","showGameStage","showClearBtn","showRoundBtn","display","dummy","createElement","appendChild","select","execCommand","removeChild","alert","textToClipboard","Member","member","isSelf","self","ready","leader","ghost","isAssignedToGhost","MemberList","sortedUsers","sort","b","connectionTime","map","TimerSetup","minReached","maxReached","min","max","timer","setTimer","inc","dec","on","Setup","lobby","initSelTracker","items","item","isSelected","useMultiSelector","setMinReached","setMaxReached","selTracker","setSelTracker","updateTracker","newitems","updTracker","existingItem","itm","numSelected","selectItem","obj","callback","cb","args","instaConfirm","icCallback","icCb","icArgs","icResetTracker","extractId","updSel","confirmSelection","resetTracker","ids","reduce","acc","reduceToIds","amISelected","i","trackedItem","checkById","idx","selectItemHandler","cbArray","icCbArray","amIEnabled","GhostCard","card","confirmedClues","isMine","opts","checkHighlight","includes","checkSelected","index","checkEnabled","isLocked","isNew","isDisplayed","opt","Ghost","isGhostUI","cluesDeck","currentStage","initSelection","types","initState","useParallelSelector","minSelected","setMinSelected","selectHandler","newSel","unselect","Object","values","areMinSelected","submitSelection","reset","sel","arr","p","Card","str","isHighlighted","isEnabled","handleClick","selected","highlighted","replace","w","charAt","Cards","myRole","cardType","cards","canIAccuse","selectedId","selectCardHandler","Player","isRedTeam","canBeTargeted","rolesRef","playerId","canTheyAccuse","hand","isRoundStage","keys","connectionStatus","entry","allRoles","showRedTeam","roleClass","roleDisplay","Players","redTeam","keyEvidence","showAsRedTeam","BasicUI","KillerUI","useChat","chat","messages","setMessages","messageText","setMessageText","newMessage","senderId","subToChat","msg","subToAnnounce","lastAnnouncement","last","m","welcome","time","Date","toLocaleTimeString","parseAndRender","meta","parent","elements","isAnno","string","wrapper","el","renderStyledBlock","strings","timestamp","renderStyledText","parseSMDString","defStyle","default","st","splitTextOn","sc","splitClsOn","createStyleObj","split","e","abbr","cls","abb","checkAbbr","classname","SMDopts","parseSMD","waitingForJoin","waitingForReady","waitingForStart","userMessage","col","join","leave","leaderId","leaderCol","ghostAssigned","unAssign","newLeader","advanceTo","resolveGame","result","clearGame","clueChosen","accuser","rId","rCol","accusee","eId","eCol","evidence","ev1","ev2","accusationRight","accusationWrong","ChatMessage","Announcer","Timer","inactiveDisplay","mounted","subToTimer","substr","Main","roundNum","ChatFeed","scrollRef","getColorId","scrollIntoView","behavior","block","inline","ref","nanoid","NewMessage","submitHandler","Chat","minimized","setMinimized","minimizeHandler","MinimizeChatButton","Dev","getDataHandler","Lobby","initSocket","io","disconnect","useIO","setLobby","joinConfirmed","setJoinConfirmed","resData","fetchLobby","data","Provider","Foyer","useParams","genURL","Header","NewLobby","newLobbySubmitHandler","leaderOf","JoinLobby","joinLobbyData","dev","prodData","devData","joinLobbySubHandler","Landing","App","routes","setUser","currentLobby","useUser","checkCookie","path","render"],"mappings":"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","file":"static/js/main.4c30d175.chunk.js","sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  // console.log('Hook: useHttp');\n  const [isLoading, setIsLoading] = useState(false); // loading state\n  const [error, setError] = useState(undefined); // error state\n\n  // prevent errors if page is switched while this is loading, where we would try to update the state of a component not on the screen anymore\n  // cancel the ongoing http request using useRef hook\n  // it will turn into a reference - data that will not change / be re-initialized when the page re-renders\n  const activeHttpRequests = useRef([]);\n\n  // wrap the entire thing in `useCallback` to avoid an infinite loop (or merely an inefficient re-render cycle) if/when the component that calls this hook re-renders and would call this function again\n  const sendRequest = useCallback(async (\n    url,\n    method = 'GET',\n    body = null,\n    headers = {}\n  ) => {\n\n    // console.log('HttpHook: sendRequest');\n    // console.log(url.slice(21) + ' | ' + method + ' | ' + body + ' | ' + headers);\n\n    setIsLoading(true); // to enable loading indicator in UX\n\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n\n    try {\n      // forward the params to `fetch`\n      // console.log('HttpHook: Awaiting response...');\n      const response = await fetch(url, {\n        method: method, // could be just `method`\n        body,\n        headers,\n        signal: httpAbortCtrl.signal,\n        credentials: 'include'\n      });\n      // console.log(response);\n\n      const responseData = await response.json(); // should be the data\n      // console.log(responseData);\n\n      // if request was successful, filter out the specific AbortController for this request; we don't try to cancel a request that already completed\n      activeHttpRequests.current = activeHttpRequests.current.filter(\n        reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n      // error may result in no response; but a 'successful' response may also bring an error; to catch these errors use `ok`\n      // `ok` property of response object is true for 200ish status codes, false for 4-500ish codes\n      if (!response.ok) {\n        console.log(responseData.message);\n        throw new Error(responseData.message);\n      }\n\n      setIsLoading(false);\n      // return the data to the component that is using this hook\n      return responseData;\n\n    } catch (err) {\n      setError(err.message || 'Http-hook: something went wrong.');\n      setIsLoading(false);\n      // throw error, so that the component using this hook knows that something went wrong and to not continue\n      throw err;\n    }\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  // cleanup function\n  useEffect(() => {\n    // no effect\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};","import React from 'react';\n\nexport const UserContext = React.createContext({\n  userId: null,\n  userName: null,\n  myLobby: null,\n  isLeader: false,\n  checkMyLobby: () => {},\n  updateUserCtx: () => {},\n  checked: false\n});\n\nexport const SocketContext = React.createContext({\n  socket: null\n});\n\n// returns an object that is not a component, but which *contains* a component, so capitalized like a component\n// set the default context here\n\n// Context.Consumer alternative to context hook; uses a child that is an anon function that takes context data as param and returns the sub-components/elements that will need the context data\n\n// Context.Provider will crash if used with a default value, unless you also give it a `value` prop that is an object the same as the default (but this can now be changed by state and such)\n\n// context-management component\n// export const UserContextProvider = props => {\n//   return <UserContext.Provider>{props.children}</UserContext.Provider>;\n// };","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  // console.log('FormHook: formReducer');\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\n// custom hook\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  // function is declared inside the component; to prevent it from being re-declared every time time the component is re-rendered (resulting in an infinite loop), use useCallback to wrap the function and in the [] define the dependencies under which the function should be re-declared. (In this case, none.)\n  const inputHandler = useCallback((id, value, isValid) => {\n    // console.log('FormHook: inputHandler');\n    // console.log(id, value, isValid)\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    // console.log('FormHook: setFormData');\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\nconst VALIDATOR_TYPE_LETTERS_ONLY = 'LETTERS';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const VALIDATOR_LETTERS_ONLY = () => ({ type: VALIDATOR_TYPE_LETTERS_ONLY });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n    if (validator.type === VALIDATOR_TYPE_LETTERS_ONLY) {\n      isValid = isValid && /^[A-Za-zÀ-ÖØ-öø-ÿ]+$/.test(value);\n    }\n  }\n  return isValid;\n};","// Utilities\n\nexport const randomName = () => {\n  const names = [\n    'nemo','cassandra','olivia','ragnar','brand','hera','violet','dagny','baldur','sigurd','rhialto','corwin','bethany','zane','athena','dane','meladius','darius','gloin','chang','sandor','gerrard','freya','zanzel','madeline','camilla','arronax', 'balthazar', 'calypso', 'agamemnon', 'darwin', 'diedre'\n  ];\n  const name = names[Math.floor(Math.random()*names.length)];\n  return name[0].toUpperCase()+name.slice(1);\n};\n\nexport const MIN_PLAYER_COUNT = 3,\n             MIN_PLAYER_COUNT_FOR_ADV_ROLES = 4,\n             MAX_NAME_LEN = 10;\n\nexport const GAME_OUTCOMES = {\n  redwin: 'The Killer wins! The Hunters used their last accusation.',\n  redwin_accomplice: 'The Killer and the Accomplice win! The Hunters used their last accusation.',\n  redwintimeout: 'The Killer wins! The Hunters ran out of time.',\n  redwintimeout_accomplice: 'The Killer and the Accomplice win! The Hunters ran out of time.',\n  redwinwitnessdead: 'The Killer wins! The Witness is dead.',\n  redwinwitnessdead_accomplice: 'The Killer and the Accomplice win! The Witness is dead.',\n  bluewin: 'The Hunters and the Ghost win!',\n  bluewinwitnessalive: 'The Hunters and the Ghost win! The Witness survived.'\n};\n\n// Dynamic, game-specific data added to user object is not provided\n// by userContext; this gets that data from the game object\nexport function getThisPlayer(userId, game) {\n  if (!game) return;\n\n  let thisPlayer;\n\n  if (game.spectators.some(sp => sp.id === userId)) {\n    thisPlayer = game.spectators.find(sp => sp.id === userId);\n    thisPlayer.role = 'spectator';\n    return thisPlayer;\n  };\n\n  thisPlayer = game.players.find(player => player.id === userId);\n  thisPlayer.role = game.viewingAs;\n  return thisPlayer;\n};\n\nexport function capitalize(str) {\n  return str.replace(/\\b([a-zÁ-ú])/g, (w) => w.charAt(0).toUpperCase() + w.slice(1));\n};\n\nconst text = {\n  WAIT_PLAYERS_JOIN: 'Waiting for more players to join. At least 4 players are needed to start. (5 or more players are recommended.)',\n  // NOTE_MIN_PLAYERS: 'At least 4 players are needed to start.',\n  // NOTE_REC_PLAYERS: '(5 or more players are recommended.)',\n  LOBBY_FULL: 'The lobby is full.',\n  WAIT_PLAYERS_READY: 'Waiting for all players to be ready.',\n  WAIT_START_GAME(iAmLeader) {\n    return `${iAmLeader ? 'All players are ready.' : 'Waiting for the leader to start the game.'}`\n  },\n  NOTE_CHOOSE_GHOST(iAmLeader) {\n    return `${iAmLeader ? 'You' : 'The leader'} may choose a player to be the Ghost or let the role be assigned randomly.`\n  },\n  NOTE_MIN_ADVROLES: 'At least 5 players are needed to use the Witness and Accomplice roles. (6 or more players are recommended.)',\n  // NOTE_REC_ADVROLES: '(6 or more players are recommended.)',\n  NOTE_REC_ADVROLES: 'For the best experience, use both the Witness and the Accomplice, or neither.',\n  WARN_WITNESS: 'Warning: Using only the Witness may make the game more difficult for the Killer.',\n  WARN_ACCOMPLICE: 'Warning: Using only the Accomplice may make the game more difficult for the Hunters and Ghost.',\n  NOTE_ENABLE_ADVROLES(iAmLeader) {\n    return `${iAmLeader ? 'You' : 'The leader'} may choose to enable one or both advanced roles.`\n  },\n};\n\nexport const lobbyMethods = {\n  text,\n  numOnline() {\n    return this.users.filter(u => u.isOnline === true).length;\n  },\n  numReady() {\n    return this.users.filter(u => u.isReady === true).length;\n  },\n  usersOnline() {\n    return this.users.filter(u => u.isOnline === true);\n  },\n  usersReady() {\n    return this.users.filter(u => u.isReady === true);\n  },\n  canUseAdvRoles() {\n    return this.numOnline() >= MIN_PLAYER_COUNT_FOR_ADV_ROLES;\n  },\n  minPlayersOnline() {\n    return this.numOnline() >= MIN_PLAYER_COUNT;\n  },\n  minPlayersReady() {\n    return this.numReady() >= MIN_PLAYER_COUNT;\n  },\n  allPlayersReady() {\n    return this.numReady() === this.numOnline();\n  },\n  canStart() {\n    return (this.minPlayersOnline()) && (this.allPlayersReady());\n  },\n  startGameText(iAmLeader) {\n    return !this.minPlayersOnline() ? ['waitingForJoin',[]]\n         : !this.allPlayersReady() ? ['waitingForReady',[]]\n         : ['waitingForStart',[iAmLeader]];\n  },\n  advRolesEnText(iAmLeader) {\n    return !this.canUseAdvRoles() ? this.text.NOTE_MIN_ADVROLES\n         : this.text.NOTE_ENABLE_ADVROLES(iAmLeader);\n  },\n  advRolesRecText() {\n    const hasBothOrNeither = (this.gameSettings.hasWitness && this.gameSettings.hasAccomplice) || (!this.gameSettings.hasWitness && !this.gameSettings.hasAccomplice)\n    return hasBothOrNeither ? this.text.NOTE_REC_ADVROLES\n         : this.gameSettings.hasWitness ? this.text.WARN_WITNESS\n         : this.text.WARN_ACCOMPLICE;\n  }\n};\n\nexport const badge = (canAccuse) => canAccuse ? 'can-accuse' : 'accusal-spent';\n\nexport const article = (role) => role === 'hunter' ? 'a' : 'the';","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\n// import '../styles/Input.css';\n\n// `useReducer` to manage more complex state; we pass it an action, it modifies the state depending on the action passed (the reducer function is how it modifies it) and then returns the state and re-renders stuff\n// here defined outside the component because it does not depend on any component inputs\nconst inputReducer = (state, action) => {\n  // console.log('inputReducer');\n  // console.log(state);\n  // console.log(action);\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state, // create copy of old state to save it to this new object; then we can modify individual key/values\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      }\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state; // return the unchanged state\n  }\n};\n\nconst Input = props => {\n  // can use array destructuring; like useState, this returns an array of two elements\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    // console.log('changeHandler');\n    // console.log(event.target.value);\n    // send this object with data about the change to the userReducer\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n    // console.log(event.target.value);\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  }\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler} // triggers for every keystroke\n        onBlur={touchHandler}\n        value={inputState.value}\n        className={`input ${props.className}-input ${\n          !props.noInvalidStyle &&\n          !inputState.isValid &&\n          inputState.isTouched &&\n          'form--invalid'\n        }`}\n      />\n    ) : (\n      <textarea\n        name=\"inputform\"\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        className={`textarea ${props.className}-textarea ${\n          !props.noInvalidStyle &&\n          !inputState.isValid &&\n          inputState.isTouched &&\n          'form--invalid'\n        }`}\n      />\n    );\n\n  return (\n    <React.Fragment>\n      <label\n        className={`label ${props.className}-label`}\n        htmlFor={props.id}\n      >\n        {props.label}\n      </label>\n      {element}\n    </React.Fragment>\n  )\n}\n\nexport default Input\n\n// htmlFor = `for` in standard html (like class\\className)\n\n// {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\n\n// not exported, used internally (by Modal, below)\nconst ModalOverlay = props => {\n  // style and some classnames given as props allows makes component more flexible/reusable\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import styles from '../styles/Button.module.css';\n// import '../styles/Button.css'\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        // className={`${styles.btn}`}\n        className={`btn btn--${props.className}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  };\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        // className={`${styles.btn} ${styles['btn-dash']}`}\n        className={`btn btn--${props.className}`}\n      >\n        {props.children}\n      </Link>\n    );\n  };\n  return (\n    <button\n      // className={`${styles.btn}`}\n      className={`btn btn--${props.className}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import styled from 'styled-components';\n\n// // import '../styles/Button.css';\n\n// // tagged template-literal, standard javascript\n// // `button` is a method on the `styled` object that will return a new component with the style provided in the backticks\n// const StyledButton = styled.button`\n//   -webkit-appearance: none;\n//      -moz-appearance: none;\n//           appearance: none;\n//   background-color: rgba(8,145,178,1);\n//   color: rgba(255,255,255,1);\n//   padding: .5rem 1rem;\n//   border: 3px solid rgba(8,145,178,1);\n//   border-radius: 0;\n//   margin: .5rem;\n//   text-transform: uppercase;\n\n//   &:hover {\n//     background-color: rgba(6,182,212,1);\n//     border: 3px solid rgba(6,182,212,1);\n//   }\n\n//   &:active {\n//     background-color: rgba(236,72,153,1);\n//     border: 3px solid rgba(236,72,153,1);\n//     outline: none;\n//   }\n\n//   &:focus { outline: none; }\n//   &:disabled,\n//   &:hover:disabled,\n//   &:active:disabled {\n//     background: #ccc;\n//     color: #979797;\n//     border-color: #ccc;\n//     cursor: not-allowed;\n//   }\n// `;\n\n// const Button = props => {\n//   if (props.href) {\n//     return (\n//       \n//         <a\n//           // className={`btn btn--${props.className}`}\n//           href={props.href}\n//         >\n//           {props.children}\n//         </a>\n//       \n//     );\n//   }\n//   if (props.to) {\n//     return (\n//       \n//         <Link\n//           to={props.to}\n//           exact={props.exact}\n//           // className={`btn btn--${props.className}`}\n//         >\n//           {props.children}\n//         </Link>\n//       \n//     );\n//   }\n//   return (\n//     <StyledButton\n//       // className={`btn btn--${props.className}`}\n//       type={props.type}\n//       onClick={props.onClick}\n//       disabled={props.disabled}\n//     >\n//       {props.children}\n//     \n//   );\n// };\n\n// export default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../ui-elements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;","import React from 'react';\n\nconst Grid = props => {\n  return (\n    <div className={`grid grid--${props.className}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Grid\n","import React from 'react';\n\nconst Container = ({ className, children }) => {\n  return (\n    <div className={`container con--${className || 'default'}`}>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from '../../hooks/form-hook';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MAXLENGTH, VALIDATOR_LETTERS_ONLY } from '../../util/validators';\nimport { MAX_NAME_LEN } from '../../util/utils';\nimport Input from '../ui-elements/Input';\nimport ErrorModal from '../modal/ErrorModal';\nimport Button from '../ui-elements/Button';\nimport { UserContext } from '../../context/contexts';\n// import Loading from '../shared/Loading';\nimport Grid from '../shared/Grid';\nimport Container from '../shared/Container';\n\nconst JoinThisLobby = ({ lobbyId }) => {\n  const { updateUserCtx } = useContext(UserContext);\n  const history = useHistory();\n  const { error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    { userName: { value: '', isValid: false } }, false\n  );\n\n  const JoinThisLobbySubHandler = async event => {\n    // console.log('JoinThisLobbySubHandler');\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/user/new`,\n        'POST',\n        JSON.stringify({\n          userName: formState.inputs.userName.value,\n          lobbyURL: lobbyId\n        }),\n        { 'Content-Type': 'application/json' },\n      );\n      updateUserCtx({\n        userId: responseData.user.id,\n        userName: responseData.user.userName,\n        myLobby: responseData.user.myLobby\n      });\n      history.push('/lobby');\n    } catch (err) { console.log(err); };\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Container className='foyerjoin'>\n      {/* {isLoading && <Loading asOverlay color='green' />} */}\n      <form className=\"form join-this-lobby-form\" onSubmit={JoinThisLobbySubHandler}>\n        <Grid className='join-this-lobby-form'>\n          <div className='join-this-lobby-title'>JOIN THIS LOBBY</div>\n          <div className='join-this-lobby-subtitle'>{lobbyId === 'z' ? 'SPLENDID-MONOLITH-8923' : lobbyId.toUpperCase()}</div>\n          <Input\n            id=\"userName\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Your Name\"\n            placeholder=\"Name\"\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(MAX_NAME_LEN), VALIDATOR_LETTERS_ONLY()]}\n            errorText=\"Please enter a name.\"\n            onInput={inputHandler}\n            noInvalidStyle={true}\n            className=\"join-this-lobby\"\n          />\n          <Button type=\"submit\" disabled={!formState.isValid} className='join-this-lobby'>\n            SUBMIT\n          </Button>\n        </Grid>\n      </form>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default JoinThisLobby;","import React from 'react';\n\nconst Loading = props => {\n  console.log(props.text);\n  return (\n    <div className={`loading ${props.asOverlay && 'overlay'}`}>\n      {/* <div className={`lds-dual-ring ${props.color}`}></div> */}\n      <div className={`loading-text ${props.color}`}>{props.text}</div>\n    </div>\n  );\n};\n\nexport default Loading;","// import {\n//   // useState,\n//   // useEffect,\n//   // useContext,\n//   // useCallback\n// } from 'react';\n// import { SocketContext } from '../context/contexts';\n\nexport const useGame = (socket) => {\n\n  // const { socket } = useContext(SocketContext);\n  // const [lobby, setLobby] = useState();\n  // const [game, setGame] = useState();\n  // const [gameOn, setGameOn] = useState(false);\n  // const [users, setOnlineUsers] = useState([]);\n  // const [leaderId, setLeaderId] = useState();\n  // const [canStart, setCanStart] = useState(false);\n  // const [gameSettings, setGameSettings] = useState();\n\n  // const lobbyLoaded = !!lobby\n  // console.log(`lobbyLoaded: ${lobbyLoaded}`)\n\n  // handlers //////////////////////////////\n\n  const startGameHandler = () => {\n    return socket.current.emit('startGame', {settings: 'placeholder'});\n    // return console.log('Error: only leader can start game');\n  };\n\n  const clearGameHandler = () => {\n    return socket.current.emit('clearGame');\n    // return console.log('Error: only leader can clear game');\n  };\n\n  const nextRoundHandler = () => {\n    return socket.current.emit('advanceStage');\n    // return console.log('Error: only leader can advance round');\n  };\n\n  const readyHandler = (userId) => {\n    socket.current.emit('readyUnready', userId);\n  };\n\n  const toggleHandler = (toggledItem) => {\n    socket.current.emit('toggle', toggledItem);\n  };\n\n  const chooseTimerHandler = (duration) => {\n    socket.current.emit('chooseTimer', duration);\n  }\n\n  const assignGhostHandler = (userId) => {\n    socket.current.emit('ghostAssigned', userId);\n  };\n\n  const chooseKeyEvHandler = (keyEv) => {\n    socket.current.emit('keyEvidenceChosen', keyEv);\n  };\n\n  const accusationHandler = (accusalEv, accusedId) => {\n    const accusation = {\n      accuserSID: socket.current.id,\n      accusedId,\n      accusalEv\n    };\n    socket.current.emit('accusation', accusation);\n  };\n\n  const killWitnessHandler = (targetId) => {\n    socket.current.emit('secondMurder', targetId);\n  };\n\n  const chooseClueHandler = (clue) => {\n    socket.current.emit('clueChosen', clue);\n  };\n\n  const replaceGhostCardHandler = (cardId) => {\n    socket.current.emit('advanceStage', cardId);\n  };\n\n  const giveLeaderHandler = (newLeaderId) => {\n    socket.current.emit('giveLeadership', newLeaderId);\n  };\n\n  // lobby subs //////////////////////////////\n\n  // const subToGameSettings = () => {\n  //   socket.current.on('gameSettingsUpdate', ({gameSettings}) => {\n  //     setGameSettings(gameSettings);\n  //   });\n  // };\n\n  // const subToUserConnected = () => {\n  //   socket.current.on('userConnected', ({ resData: {users} }) => {\n  //     setLobby({\n  //       ...lobby,\n  //       canStart: false,\n  //       users: users\n  //     });\n  //   });\n  // };\n\n  // const subToGhostAssigned = () => {\n  //   socket.current.on('ghostAssigned', ({ resData: {users} }) => {\n  //     setLobby({\n  //       ...lobby,\n  //       users: users\n  //     });\n  //   });\n  // };\n\n  // const subToReadyUnready = () => {\n  //   socket.current.on('readyUnready', ({ resData: {users, canStart} }) => {\n  //     setLobby({\n  //       ...lobby,\n  //       canStart: canStart,\n  //       users: users\n  //     });\n  //   });\n  // };\n\n  // const subToUserDisco = () => {\n  //   socket.current.on('userDisco', ({ resData: {users, newLeaderId} }) => {\n\n  //     const newLeader = () => {\n  //       setLobby({\n  //         ...lobby,\n  //         users: users,\n  //         leader: newLeaderId\n  //       });\n  //     };\n\n  //     const noNewLeader = () => {\n  //       setLobby({\n  //         ...lobby,\n  //         users: users\n  //       });\n  //     };\n\n  //     return newLeaderId ? newLeader : noNewLeader;\n  //   });\n  // };\n\n  // // game subs //////////////////////////////\n\n  // const subToStartGame = () => {\n  //   socket.current.on('startGame', ({ game }) => {\n  //     setGame(game);\n  //     setGameOn(true);\n  //   });\n  // };\n\n  // const subToAdvStage = () => {\n  //   socket.current.on('advanceStage', ({ game }) => {\n  //     setGame(game);\n  //   });\n  // };\n\n  // const subToClueChosen = () => {\n  //   socket.current.on('clueChosen', ({ game }) => {\n  //     setGame(game);\n  //   });\n  // };\n\n  // const subToWrongAccusation = () => {\n  //   socket.current.on('wrongAccusation', ({ game }) => {\n  //     setGame(game);\n  //   });\n  // };\n\n  // const subToGameResolution = () => {\n  //   socket.current.on('resolveGame', ({ game }) => {\n  //     setGame(game);\n  //   });\n  // };\n\n  // const subToClearGame = () => {\n  //   socket.current.on('clearGame', ({ resData: {users} }) => {\n  //     // setOnlineUsers(users);\n  //     // setCanStart(false);\n  //     setGame(null);\n  //     setGameOn(false);\n  //   });\n  // };\n\n  // const subToGame = useCallback(() => {\n  //   console.log('%csubToGame','color:#79f98e');\n  //   subToGameSettings();\n  //   subToUserConnected();\n  //   subToGhostAssigned();\n  //   subToReadyUnready();\n  //   subToUserDisco();\n  //   subToStartGame();\n  //   subToAdvStage();\n  //   subToClueChosen();\n  //   subToWrongAccusation();\n  //   subToGameResolution();\n  //   subToClearGame();\n  // }, []);\n\n  return {\n    // subToGame,\n    // lobby,\n    // setLobby,\n    // game,\n    // setGame,\n    // gameOn,\n    // setGameOn,\n    // gameSettings,\n    // setGameSettings,\n\n    startGameHandler,\n    clearGameHandler,\n    nextRoundHandler,\n    readyHandler,\n    toggleHandler,\n    chooseTimerHandler,\n    assignGhostHandler,\n    chooseKeyEvHandler,\n    accusationHandler,\n    killWitnessHandler,\n    chooseClueHandler,\n    replaceGhostCardHandler,\n    giveLeaderHandler\n  };\n};\n\n// if (!lobby) return console.log(`Err: lobby = ${lobby}`);\n\n  // function clearGame() {\n  //   console.log('clearGame')\n  // };\n\n      // switch (game.result.type) {\n      //   case 'red-win': redWin(game); break;\n      //   case 'red-win-timeout': redWinTimeout(game); break;\n      //   case 'red-win-witness_dead': redWinWitnessDead(game); break;\n      //   case 'blue-win': endByLastRound(game); break;\n      //   case 'blue-win-witness_alive': endByLastRound(game); break;\n      //   default: clearGame(); break;\n      // };\n\n  // const [thisPlayer, setThisPlayer] = useState();\n\n  // const getThisPlayer = useCallback((userId) => {\n  //   return this.players.find(player => player.id === userId);\n  // },[]);\n\n  // const setGameWiMethods = (game) => {\n  //   console.log('setGameWithMethods')\n  //   setGame({...game, getThisPlayer});\n  // };","import React, {\n  useState,\n  useContext,\n  // useEffect\n} from 'react';\nimport { UserContext, SocketContext } from '../../../context/contexts';\nimport Container from '../../shared/Container';\nimport Button from '../../ui-elements/Button';\nimport { useGame } from '../../../hooks/game-hook';\nimport { GoEye, GoEyeClosed, GoLinkExternal } from 'react-icons/go';\nimport '../../../styles/info.css';\n\nconst Info = ({\n  gameOn,\n  stage,\n  iAmLeader\n}) => {\n\n  const { myLobby, userName } = useContext(UserContext);\n  const { socket } = useContext(SocketContext);\n\n  const {\n    clearGameHandler,\n    nextRoundHandler,\n  } = useGame(socket);\n\n  function textToClipboard(text) {\n    const dummy = document.createElement('textarea');\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand('copy');\n    document.body.removeChild(dummy);\n    alert('Lobby URL copied.');\n  }\n\n  const [lobbyIdHidden, setLobbyIdHidden] = useState(true);\n\n  const hideLobbyIdHandler = () => setLobbyIdHidden(!lobbyIdHidden);\n\n  const lobbyId = myLobby === 'z' ? 'dark-monolith-3289' : myLobby;\n\n  const showGameStage = stage && stage.id;\n  const showClearBtn = iAmLeader;\n  const showRoundBtn = iAmLeader\n                    && stage\n                    && (stage.id === 'round-1' || stage.id === 'round-2');\n\n  if (!gameOn) return (\n    <Container className=\"info nogame\">\n      <div className='lobbyid-wrap'>\n        <Button\n          className='hidelobbyid'\n          onClick={hideLobbyIdHandler}\n        >\n          {lobbyIdHidden ? <GoEye/> : <GoEyeClosed/>}\n        </Button>\n        <div className={`info-lobbyid ${lobbyIdHidden ? 'obscured' : 'visible'}`}>\n          {lobbyIdHidden ? 'lobby name hidden' : lobbyId}\n        </div>\n        <div className='copyurl-wrap'>\n          <Button\n            className='copyurl'\n            onClick={() => textToClipboard(`mhk-front.herokuapp.com/${lobbyId}`)}\n          >\n            <GoLinkExternal/>\n          </Button>\n          <span className='copyurl-label'>COPY URL</span>\n        </div>\n      </div>\n    </Container>\n  );\n\n  return (\n    <Container className='info game'>\n      {showGameStage &&\n      <div className='info-gamestage'>\n        {stage.display}\n      </div>}\n      <div className='game-control-buttons'>\n        {showRoundBtn &&\n          <Button onClick={nextRoundHandler}>\n            NEXT ROUND\n          </Button>\n        }\n        {showClearBtn &&\n          <Button onClick={clearGameHandler}>\n            CLEAR GAME\n          </Button>\n        }\n      </div>\n      <div className='info-lobbyid'>\n        {userName}\n      </div>\n    </Container>\n  );\n};\n\nexport default Info;\n\n  // const HideLobbyIdButton = () => (\n  //   <div className='hidebutton-wrap'>\n  //     <svg viewBox=\"0 0 324 67\">\n  //       <a href='#' onClick={hideLobbyIdHandler}>\n  //         <path d=\"M302.5,3.333c-1.574,-2.098 -4.044,-3.333 -6.667,-3.333c-32.311,0 -242.805,0 -287.5,0c-4.602,0 -8.333,3.731 -8.333,8.333c0,12.809 0,37.192 -0,50c0,4.603 3.731,8.334 8.333,8.334c44.695,-0 255.189,-0 287.5,-0c2.623,-0 5.093,-1.235 6.667,-3.334c5.011,-6.68 16.182,-21.576 20.625,-27.5c1.111,-1.481 1.111,-3.518 0,-5c-4.443,-5.924 -15.614,-20.819 -20.625,-27.5Z\"/>\n  //         <text\n  //           x='150'\n  //           y='37'\n  //           text-anchor='middle'\n  //           alignment-baseline='middle'\n  //         >\n  //           {lobbyIdHidden ? 'SHOW LOBBY-ID' : 'HIDE LOBBY-ID'}\n  //         </text>\n  //       </a>\n  //     </svg>\n  //   </div>\n  // );\n\n  // const renderLobbyId = (render, id) => {\n  //   if (!render) return id;\n  //   return 'lobby id hidden';\n  //   // return id.split('').map(ch => ch === '-' ? '•' : '•').join('');\n  // }\n\n  // const url = () => {\n  //   return process.env.NODE_ENV === 'development'\n  //     ? `mhkgame.com/lobby/${lobbyId}`\n  //     : `${(process.env.REACT_APP_FRONTEND_URL).slice(9)}/lobby/${lobbyId}`;\n  // };","import React, {\n  useContext\n} from 'react';\n// import Button from '../../../ui-elements/Button';\nimport { UserContext, SocketContext } from '../../../../context/contexts';\nimport { useGame } from '../../../../hooks/game-hook';\nimport { RiVipCrown2Fill } from 'react-icons/ri';\nimport { FaGhost } from 'react-icons/fa';\n\nconst Member = ({\n  member,\n  iAmLeader,\n}) => {\n\n  const { userId } = useContext(UserContext);\n  const { socket } = useContext(SocketContext);\n\n  const { readyHandler, assignGhostHandler, giveLeaderHandler } = useGame(socket);\n\n  const isSelf = userId === member.id;\n  const self = isSelf ? 'ml-self' : 'ml-other';\n  const ready = member.isReady ? 'ml-ready' : 'ml-notready';\n  const leader = member.isLeader ? 'ml-leader' : 'ml-notleader';\n  const ghost = member.isAssignedToGhost ? 'ml-ghost' : 'ml-notghost';\n\n  const leaderViewSelf = () => (<>\n\n    <div className={`member leader-icon ${leader}`}>\n      <RiVipCrown2Fill/>\n    </div>\n\n    <button\n      className={`member btn_ready name ${self} ${ready} ${leader}`}\n      onClick={() => readyHandler(userId)}\n    >\n      {member.userName}\n    </button>\n\n  </>);\n\n  const leaderViewOther = () => (<>\n\n    <button\n      className={`member btn_give-leader`}\n      onClick={() => giveLeaderHandler(member.id)}\n    >\n      <RiVipCrown2Fill/>\n    </button>\n\n    <div\n      className={`member name ${self} ${ready} ${leader}`}\n    >\n      {member.userName}\n    </div>\n\n  </>);\n\n  const leaderView = () => (\n    <li className='member-grid'>\n\n      {isSelf ? leaderViewSelf() : leaderViewOther()}\n\n      <button\n        className={`member btn_assign-ghost ${ghost}`}\n        onClick={() => assignGhostHandler(member.id)}\n      >\n        <FaGhost/>\n      </button>\n\n    </li>\n  );\n\n  if (iAmLeader) return leaderView();\n\n  return (\n    <li className='member-grid'>\n\n      <div className={`member leader-icon ${leader}`}>\n        <RiVipCrown2Fill/>\n      </div>\n\n      {isSelf && <button\n        className={`member btn_ready name ${self} ${ready} ${leader}`}\n        onClick={() => readyHandler(userId)}\n      >\n        {member.userName}\n      </button>}\n\n      {!isSelf && <div\n        className={`member name ${self} ${ready} ${leader}`}\n      >\n        {member.userName}\n      </div>}\n\n      <div className={`member ghost-icon ${ghost}`}>\n        <FaGhost/>\n      </div>\n\n    </li>\n  );\n\n  // return (\n  //   <li className={`member-wrapper ${self} ${ready} ${leader} ${ghost}`}>\n  //     <Button\n  //       className='member give-leader'\n  //       disabled={!iAmLeader || userId === member.id}\n  //       onClick={() => giveLeaderHandler(member.id)}\n  //     >L</Button>\n  //     <Button\n  //       className='member assign-ghost'\n  //       disabled={!iAmLeader}\n  //       onClick={() => assignGhostHandler(member.id)}\n  //     >G</Button>\n  //     <Button\n  //       className='member ready'\n  //       disabled={userId !== member.id}\n  //       onClick={() => readyHandler(userId)}\n  //     >R</Button>\n  //     <Button\n  //       className='member name'\n  //       disabled={userId !== member.id}\n  //       onClick={() => readyHandler(userId)}\n  //     >\n  //       <div className={`member name-grid`}>\n  //         <div className='leader-icon'>{leader === 'leader' && <RiVipCrown2Fill/>}</div>\n  //         <div className='name'>{member.userName}</div>\n  //       </div>\n  //     </Button>\n  //   </li>\n  // );\n};\n\nexport default Member;\n\n// `${memberId.slice(0,-5)}-${memberId.slice(-4)}`","import React, {\n  // useEffect,\n  // useState,\n  // useContext\n} from 'react';\nimport Container from '../../../shared/Container';\nimport Member from './Member';\nimport '../../../../styles/memberlist.css';\n\nconst MemberList = ({ users, iAmLeader }) => {\n\n  // sort by connection time; most recent user at end of list\n  const sortedUsers = users.sort((a, b) => a.connectionTime - b.connectionTime)\n\n  return (\n    <Container className=\"memberlist\">\n      <ul className=\"memberlist\">\n        {sortedUsers.map((member) => {\n          if (!member.isOnline) return null;\n          return (\n            <Member\n              key={member.id}\n              member={member}\n              iAmLeader={iAmLeader}\n            />\n          )\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default MemberList;","import React, {\n  useState\n} from 'react';\nimport Button from '../../../ui-elements/Button';\nimport { GoArrowLeft, GoArrowRight } from 'react-icons/go';\nimport '../../../../styles/setup.css';\n\nconst TimerSetup = ({\n  iAmLeader,\n  gameSettings,\n  chooseTimerHandler\n}) => {\n\n  const [timer, setTimer] = useState({\n    minReached: true,\n    maxReached: false,\n    min: 0,\n    max: 5,\n    val: gameSettings.timer.duration\n  });\n\n  function inc() {\n    if (timer.val < timer.max) setTimer({\n      ...timer,\n      ...{\n        val: ++timer.val,\n        minReached: false,\n      }});\n\n    if (timer.val === timer.max) setTimer({...timer, ...{maxReached: true}});\n    return chooseTimerHandler(timer.val);\n  };\n\n  function dec() {\n    if (timer.val > timer.min) setTimer({...timer, ...{val: --timer.val, maxReached: false}});\n    if (timer.val === timer.min) setTimer({...timer, ...{minReached: true}});\n    return chooseTimerHandler(timer.val);\n  };\n\n  const timerLeader = () => (\n    <div className='timer-wrap leader'>\n      <div className='timer title'>Round Timer</div>\n      <Button\n        className='timer dec'\n        onClick={dec}\n        disabled={timer.minReached}\n      ><GoArrowLeft/></Button>\n      {timer.val !== 0 && <div className={`timer value on`}>{`${timer.val}:00`}</div>}\n      {timer.val === 0 && <div className={`timer value off`}>{'OFF'}</div>}\n      <Button\n        className='timer inc'\n        onClick={inc}\n        disabled={timer.maxReached}\n      ><GoArrowRight/></Button>\n    </div>\n  );\n\n  const timerBasic = () => (\n    <div className='timer-wrap'>\n      <div>Round Timer</div>\n      <div>{gameSettings.timer.on ? `${gameSettings.timer.duration}:00` : 'OFF'}</div>\n    </div>\n  );\n\n  return iAmLeader ? timerLeader() : timerBasic()\n};\n\nexport default TimerSetup;\n","import React, {\n  useContext\n} from 'react';\nimport { SocketContext } from '../../../../context/contexts';\nimport { useGame } from '../../../../hooks/game-hook';\nimport Container from '../../../shared/Container';\nimport Button from '../../../ui-elements/Button';\nimport TimerSetup from './TimerSetup';\nimport '../../../../styles/setup.css';\n\nconst Setup = ({\n  lobby,\n  iAmLeader,\n  gameSettings,\n}) => {\n\n  const { socket } = useContext(SocketContext);\n\n  const tttext = 'At least 5 players are needed to use the Witness and Accomplice roles (6 or more players are recommended). For the best experience, use both the Witness and the Accomplice, or neither.'\n\n  const {\n    startGameHandler,\n    toggleHandler,\n    chooseTimerHandler,\n  } = useGame(socket);\n\n  const advRolesLeader = () => (<>\n    <div className='advrole-wrapper'>\n      <Button\n        className={`advrole ${gameSettings.hasWitness ? 'on' : 'off'}`}\n        onClick={() => toggleHandler(`witness`)}\n        disabled={!lobby.canUseAdvRoles()}\n      >\n        {gameSettings.hasWitness ? 'Y' : 'X'}\n      </Button>\n      <div\n        className={`advrole ${gameSettings.hasWitness ? 'on' : 'off'}`}\n      >WITNESS</div>\n    </div>\n    <div className='advrole-wrapper'>\n      <Button\n        className={`advrole ${gameSettings.hasAccomplice ? 'on' : 'off'}`}\n        onClick={() => toggleHandler(`accomplice`)}\n        disabled={!lobby.canUseAdvRoles()}\n      >\n        {gameSettings.hasAccomplice ? 'Y' : 'X'}\n      </Button>\n      <div\n        className={`advrole ${gameSettings.hasAccomplice ? 'on' : 'off'}`}\n      >ACCOMPLICE</div>\n    </div>\n  </>);\n\n  const advRolesBasic = () => (<>\n    <div\n      className={`advrole ${gameSettings.hasWitness ? 'on' : 'off'}`}\n    >WITNESS</div>\n    <div\n      className={`advrole ${gameSettings.hasAccomplice ? 'on' : 'off'}`}\n    >ACCOMPLICE</div>\n  </>);\n\n  return (\n    <Container className={`setup ${iAmLeader ? 'leader' : 'notleader'}`}>\n\n      <div className='setup-section start'>\n        {iAmLeader && <Button\n          onClick={startGameHandler}\n          disabled={!lobby.canStart()}\n        >Start Game</Button>}\n      </div>\n\n      {/* <div className='setup-section sttxt txt'> */}\n        {/* <p>{lobby.startGameText(iAmLeader)}</p> */}\n      {/* </div> */}\n\n      {/* <div className='setup-section ghost txt'>\n        <p>Ghost: <span className='advrole ghost'>{gameSettings.assignedToGhost?.slice(0,-5) || 'RANDOM'}</span></p>\n      </div> */}\n\n      <div className='setup-section roles tooltip'>\n        {iAmLeader ? advRolesLeader() : advRolesBasic()}\n        <span className='tooltiptext'>{tttext}</span>\n      </div>\n\n      {/* <div className='setup-section watxt txt'>\n        <p>{lobby.advRolesRecText()}</p>\n        <p>{lobby.advRolesEnText(iAmLeader)}</p>\n      </div> */}\n\n      <div className='setup-section timer'>\n        <TimerSetup\n          iAmLeader={iAmLeader}\n          gameSettings={gameSettings}\n          chooseTimerHandler={chooseTimerHandler}\n        />\n      </div>\n\n    </Container>\n  );\n};\n\nexport default Setup;\n","import {\n  useState,\n  useCallback\n} from 'react';\n// const difference = require('lodash.difference');\n\nconst reduceToIds = (selTracker) => {\n  return selTracker.reduce((acc, item) => {\n    if (item.isSelected) acc.push(item.id);\n    return acc;\n  }, []);\n};\n\nconst initSelTracker = (items) => {\n  if (!items) return console.log(`initSelTracker Error: 'items' = ${items}`)\n  const initState = items.map(item => {\n    return {id: item.id, isSelected: false };\n  });\n  return initState\n};\n\nconst extractId = (item) => {\n  if (typeof(item) === 'string') return item;\n  if ((typeof(item) === 'object') && !!item.id) return item.id;\n  console.log('extractId Error: returning null');\n  return null;\n};\n\nexport const useMultiSelector = ({items, min=1, max=1}) => {\n\n  const [minReached, setMinReached] = useState(false);\n  const [maxReached, setMaxReached] = useState(false);\n  const [selTracker, setSelTracker] = useState(initSelTracker(items));\n\n  const updateTracker = useCallback((newitems) => {\n    const updItems = initSelTracker(newitems);\n    const updTracker = updItems.map(item => {\n      const existingItem = selTracker.find(itm => itm.id === item.id);\n      if (!!existingItem) return existingItem;\n      return item;\n    });\n    setSelTracker(updTracker);\n    const numSelected = updTracker.filter(itm => itm.isSelected === true).length;\n    setMinReached(numSelected >= min);\n    setMaxReached(numSelected === max);\n  },[selTracker, min, max]);\n\n  const selectItemHandler = (item, cbArray, instaConfirm, icCbArray, icResetTracker) => {\n    let callback, args, icCallback, icArgs;\n    if (!!cbArray) {\n      callback = cbArray[0];\n      args = cbArray[1];\n    };\n    if (!!instaConfirm) {\n      icCallback = icCbArray[0];\n      icArgs = icCbArray[1];\n    };\n    const obj = {\n      item: item,\n      cb:[callback, args],\n      instaConfirm: instaConfirm,\n      icCb:[icCallback, icArgs],\n      icResetTracker: icResetTracker\n    };\n    return selectItem(obj);\n  };\n\n  const selectItem = (obj) => {\n\n    const item = obj.item;\n    const callback = obj.cb[0];\n    const args = obj.cb[1];\n    const instaConfirm = obj.instaConfirm;\n    const icCallback = obj.icCb[0];\n    const icArgs = obj.icCb[1];\n    const icResetTracker = obj.icResetTracker;\n\n    const id = extractId(item);\n    const updSel = selTracker.map(itm => {\n      if (itm.id !== id) return itm;\n      return { id: itm.id, isSelected: !itm.isSelected };\n    });\n    setSelTracker(updSel);\n\n    const numSelected = updSel.filter(itm => itm.isSelected === true).length;\n    setMinReached(numSelected >= min);\n    setMaxReached(numSelected === max);\n\n    if (!!callback) return callback(...args);\n    if (!!instaConfirm) {\n      return confirmSelection({cb:[icCallback, icArgs], icResetTracker})\n    };\n  };\n\n  const confirmSelection = ({cb:[callback, ...args], resetTracker}) => {\n    const ids = reduceToIds(selTracker);\n\n    if (resetTracker) {\n      setSelTracker(initSelTracker(items));\n      setMinReached(false);\n      setMaxReached(false);\n    };\n\n    return callback(ids, ...args);\n  };\n\n  function checkById(id) {\n    const trackedItem = selTracker.find(item => item.id === id);\n    if (!trackedItem) return console.log(`Err! trackedItem falsy`);\n    return trackedItem.isSelected;\n  };\n\n  function checkByIndex(idx) {\n    if ((selTracker.length-1) < idx) return console.log(`Err! selTracker too short`);\n    if (selTracker[idx] === undefined) return console.log(`Err! item at idx undefined`);\n    return selTracker[idx].isSelected;\n  };\n\n  const amISelected = (i) => {\n    if (!i && i !== 0) return console.log(`Err! i is falsy`);\n    if (selTracker.length === 0) return console.log(`Err! selTracker empty`);\n    return (typeof(i) === 'string') ? checkById(i) : checkByIndex(i);\n  };\n\n  const amIEnabled = (i) => {\n    if (maxReached && !amISelected(i)) return false;\n    return true;\n  };\n\n  return {\n    selectItem,\n    selectItemHandler,\n    confirmSelection,\n    amISelected, amIEnabled,\n    updateTracker,\n    minReached, maxReached,\n    selTracker\n  };\n};","import React, {\n  // useState,\n  useContext\n} from 'react';\nimport { SocketContext } from '../../../../context/contexts';\nimport { useMultiSelector } from '../../../../hooks/multi-selector';\nimport { useGame } from '../../../../hooks/game-hook';\nimport Button from '../../../ui-elements/Button';\n\nconst GhostCard = ({\n  card,\n  confirmedClues,\n  isMine,\n  stage\n}) => {\n\n  const { socket } = useContext(SocketContext);\n\n  const {\n    chooseClueHandler,\n    replaceGhostCardHandler\n  } = useGame(socket);\n\n  const {\n    selectItemHandler,\n    confirmSelection,\n    amISelected, amIEnabled,\n    maxReached\n  } = useMultiSelector({items: card.opts});\n\n  const checkHighlight = (clue) => {\n    if (confirmedClues.includes(clue.id)) return 'highlighted';\n  };\n\n  const checkSelected = (index) => {\n    if (amISelected(index)) return 'selected';\n  };\n\n  const checkEnabled = (index) => {\n    if (!isMine) return false;\n    if (stage.id === 'setup' || stage.type === 'liminal') return false;\n    if (card.isLocked) return false;\n    return amIEnabled(index);\n  };\n\n  const isNew = card.isNew ? 'new' : 'old';\n\n  const confirmClueBtn = () => {\n    return (\n      <Button\n        className='gc confirm-clue'\n        onClick={() => confirmSelection({ cb:[chooseClueHandler], resetTracker: false })}\n        disabled={!maxReached}\n      >\n        Confirm\n      </Button>\n    );\n  };\n\n  const replaceCardBtn = () => {\n    return (\n      <Button\n        className='gc replace-card'\n        onClick={() => replaceGhostCardHandler(card.id)}\n        disabled={false}\n      >\n        REPLACE\n      </Button>\n    );\n  };\n\n  const confirmBtns = () => {\n    if (stage.type !== 'liminal' && !card.isLocked) return confirmClueBtn();\n    if (stage.type === 'liminal' && card.type === 'clue' && !card.isNew) return replaceCardBtn();\n    return <div className='gc-conbtn-placeholder'>placeholder</div>\n  };\n\n  if (!card.isDisplayed) return null;\n\n  return (\n    <div className={`card-wrap--ghost ${card.type} ${isNew}`}>\n      <div className={'gc-title'}>{card.id}</div>\n      <ul>\n        {card.opts.map((opt, index) => (\n          <li\n            key={opt.id}\n            className='gc-clue'\n          >\n            <button\n              className={`gc-clue-btn ${checkHighlight(opt)} ${checkSelected(index)}`}\n              disabled={!checkEnabled(opt.id)}\n              onClick={() => selectItemHandler(opt.id)}\n            >\n              {opt.id}\n            </button>\n          </li>\n        ))}\n      </ul>\n      {isMine && confirmBtns()}\n    </div>\n  );\n};\n\nexport default GhostCard;","import React from 'react';\nimport Container from '../../../shared/Container';\nimport GhostCard from './GhostCard';\nimport { GiDeathSkull } from 'react-icons/gi';\nimport '../../../../styles/ghost.css';\n\nconst Ghost = ({\n  isGhostUI,\n  game: {\n    confirmedClues,\n    cluesDeck,\n    currentStage\n  }\n}) => {\n\n  const ghostCardBack = () => (\n    <div className='card-wrap--ghost back'>\n      <div className='gc-back'>\n        <div>\n          <GiDeathSkull className='gc-back-icon' />\n          <div className='gc-back-text'>MHK</div>\n        </div>\n      </div>\n      {isGhostUI &&\n      <div className='gc-conbtn-placeholder'>\n        invisibletext\n      </div>}\n    </div>\n  )\n\n  return (\n    <Container className={isGhostUI ? 'self' : 'ghost'}>\n      <ul className='c-group'>\n        {cluesDeck.map((card) => (\n        <GhostCard\n          key={card.id}\n          card={card}\n          stage={currentStage}\n          isMine={isGhostUI}\n          confirmedClues={confirmedClues}\n        />))}\n        {currentStage.type !== 'liminal' && ghostCardBack()}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Ghost;\n","import {\n  useState,\n  // useCallback\n} from 'react';\n\nfunction areMinSelected(selTracker) {\n  if (Object.values(selTracker).includes(null)) return false;\n  return true;\n};\n\nfunction initSelection(types) {\n  if (!types) return console.log(`initParTrack Err: 'types' = ${types}`);\n  if (types.length < 1) return console.log(`initParTrack Err: 'types' is empty`);\n  let initState = {};\n  types.forEach(type => {\n    initState = {\n      ...initState,\n      ...{[type]: null}\n    };\n  });\n  return initState\n};\n\nconst reduceToIds = (sel) => {\n  let arr = [];\n  for (let p in sel) arr.push(sel[p].id);\n  return arr;\n};\n\nexport const useParallelSelector = (types) => {\n\n  const [selTracker, setSelTracker] = useState(initSelection(types));\n  const [minSelected, setMinSelected] = useState(false);\n\n  const selectHandler = (item) => {\n    const alreadySelected = item.id === selTracker[item.type]?.id;\n    alreadySelected ? unselect(item) : select(item);\n    setMinSelected(areMinSelected(selTracker));\n\n    function select(item) {\n      const newSel = selTracker;\n      newSel[item.type] = item;\n      setSelTracker({...newSel});\n    };\n\n    function unselect(item) {\n      const newSel = selTracker;\n      newSel[item.type] = null;\n      setSelTracker({...newSel});\n    };\n  };\n\n  const submitSelection = ({cb:[callback, ...args], reset}) => {\n    const ids = reduceToIds(selTracker);\n\n    if (reset) {\n      setSelTracker(initSelection(types));\n      setMinSelected(false);\n    };\n\n    return callback(ids, ...args);\n  };\n\n  return {\n    selTracker,\n    minSelected,\n    selectHandler,\n    submitSelection\n  };\n};","import React, {\n  // useState\n} from 'react';\nimport { capitalize } from '../../../../util/utils'\n// import { GiDeathSkull } from 'react-icons/gi';\n\nconst Card = ({\n  card,\n  className,\n  id,\n  isHighlighted,\n  isSelected,\n  isEnabled,\n  handleClick\n}) => {\n\n  const selected = isSelected ? 'selected' : 'default';\n  const highlighted = isHighlighted ? 'highlighted' : 'default';\n\n  return (\n    <button\n      className={`card-wrap--player ${className} ${selected} ${highlighted}`}\n      disabled={!isEnabled}\n      onClick={() => handleClick(card)}\n    >\n      {/* <GiDeathSkull className={`card-icon ${className}`} /> */}\n      <div className={`card-title ${className}`}>{capitalize(id)}</div>\n    </button>\n  );\n};\n\nexport default Card;\n\n// className\n// id\n// isMine\n// isHighlighted\n// isSelected\n// isEnabled\n// handleClick\n\n// DEF if (imGhost) EN = false\n// DEF if (imHunter && isMine) EN = false\n\n// if ((imGhost || imKiller) && isKeyEv) HI = true\n// if (stage === killerChoosing && imKiller && isMine) EN = true\n// if (stage === anyRound && (imKiller || imHunter) && !isMine) EN = true","import React, {\n  // useState\n} from 'react';\nimport Card from './Card';\nimport '../../../../styles/cards.css';\n\nconst Cards = ({\n  myRole,\n  type,\n  cardType,\n  stage,\n  cards,\n  keyEv,\n  canIAccuse,\n  selectedId,\n  selectCardHandler\n}) => {\n\n  const rolesWithSimpleHand = ['hunter', 'witness', 'accomplice'];\n  const hasSimpleHand = rolesWithSimpleHand.includes(myRole) && (type === 'hunterUI');\n\n  if (hasSimpleHand) {\n    return (\n      <ul className={`c-group ${cardType}`}>\n      {cards.map((card) => (\n        <Card\n          key={card.id}\n          id={card.id}\n          className={card.type}\n          isHighlighted={false}\n          isSelected={false}\n          isEnabled={false}\n          handleClick={null}\n        />\n      ))}\n    </ul>\n    );\n  };\n\n  // console.log(`${cards[0].type} ${selectedId}`);\n\n  const isEnabled = () => {\n    switch (type) {\n      case `hunterUI`:\n        return false;\n      case `killerUI`:\n        if (stage.id !== `setup`) return false;\n        return true;\n      case `otherPlayer`:\n        if (myRole === 'ghost' || myRole === 'spectator') return false;\n        if (stage.type !== `round` || !canIAccuse) return false;\n        return true;\n      default:\n        return console.log(`Err! placeholder`);\n    };\n  };\n\n  const isHighlighted = (cardId) => {\n    if (myRole === 'hunter' || myRole === 'witness') return false;\n    if (keyEv) return keyEv.includes(cardId);\n  };\n\n  return (\n    <ul className={`c-group ${cardType}`}>\n    {cards.map((card) => (\n      <Card\n        key={card.id}\n        id={card.id}\n        card={card}\n        className={card.type}\n        isHighlighted={isHighlighted(card.id)}\n        isEnabled={isEnabled(card.id)}\n        isSelected={selectedId === card.id}\n        handleClick={selectCardHandler}\n      />\n    ))}\n  </ul>\n  );\n};\n\nexport default Cards;\n","import React, {\n  // useState,\n  useContext,\n  // useEffect\n} from 'react';\nimport { useParallelSelector } from '../../../../hooks/parallel-selector';\nimport { useGame } from '../../../../hooks/game-hook';\nimport { SocketContext } from '../../../../context/contexts';\nimport { badge } from '../../../../util/utils';\nimport Container from '../../../shared/Container';\nimport Button from '../../../ui-elements/Button';\nimport Cards from './Cards';\nimport '../../../../styles/player.css';\n\nconst Player = ({\n  myRole,\n  stage,\n  isRedTeam,\n  keyEv,\n  canIAccuse,\n  canBeTargeted,\n  rolesRef,\n  player: {\n    id: playerId,\n    canAccuse: canTheyAccuse,\n    isOnline,\n    hand,\n  }\n}) => {\n\n  const { socket } = useContext(SocketContext);\n\n  const isRoundStage = stage.type === 'round';\n  const types = Object.keys(hand);\n  const connectionStatus = isOnline ? 'online' : 'offline';\n\n  const {\n    accusationHandler,\n    killWitnessHandler\n  } = useGame(socket);\n\n  const {\n    selTracker,\n    minSelected,\n    selectHandler,\n    submitSelection\n  } = useParallelSelector(types);\n\n  const allRoles = () => {\n    const role = rolesRef.find(entry => entry.user.id === playerId).role;\n    return [role, role];\n  };\n\n  const accuseBtn = () => {\n    return (\n      <Button\n        className='confirm-accusation'\n        onClick={() => submitSelection({cb:[accusationHandler, playerId], reset:true})}\n        disabled={!minSelected}\n      >\n        ACCUSE\n      </Button>\n    );\n  };\n\n  const killBtn = () => {\n    return (\n      <Button\n        className='confirm-kill'\n        onClick={() => killWitnessHandler(playerId)}\n        disabled={false}\n      >\n        KILL\n      </Button>\n    );\n  };\n\n  const interact = () => {\n    if (myRole !== 'ghost' && isRoundStage && canIAccuse) return accuseBtn();\n    if (canBeTargeted) return killBtn();\n    return null;\n  };\n\n  const showRedTeam = (myRole) => {\n    if (myRole === 'witness') return ['redteam', '!!!'];\n    if (myRole === 'killer') return ['accomplice', 'accomplice'];\n    if (myRole === 'accomplice') return ['killer', 'killer'];\n    return null;\n  };\n\n  const role = () => {\n    if (myRole === 'ghost' || myRole === 'spectator') return allRoles();\n    if (myRole === 'hunter') return ['mystery', '???'];\n    if (isRedTeam) return showRedTeam(myRole);\n    return ['hunter', 'hunter'];\n  }\n\n  const [roleClass, roleDisplay] = role();\n\n  return (\n    <Container className='player'>\n      <li className={`p-info badge ${badge(canTheyAccuse)}`}>\n        *** o7 ***\n      </li>\n      <li className={`p-info role ${roleClass}`}>\n        <div className='wrapper'>\n          <div>\n            {/* <span className={`indicator ${connectionStatus}`}></span> */}\n            <span className={`username ${connectionStatus}`}>{playerId.slice(0,-5)}</span>\n          </div>\n          <div className='subtitle'>Their role</div>\n          <div className={roleClass}>{roleDisplay.toUpperCase()}</div>\n        </div>\n      </li>\n      <li className={`p-info interact`}>\n        {interact()}\n      </li>\n      {types.map((type) => (\n        <Cards\n          myRole={myRole}\n          type={`otherPlayer`}\n          cardType={type}\n          key={type}\n          stage={stage}\n          cards={hand[type]}\n          selectedId={selTracker[type]?.id}\n          selectCardHandler={selectHandler}\n          canIAccuse={canIAccuse}\n          isRoundStage={isRoundStage}\n          keyEv={keyEv}\n        />\n      ))}\n    </Container>\n  )\n};\n\nexport default Player;","import React, {\n  // useEffect,\n  // useState,\n  useContext\n} from 'react';\nimport { UserContext } from '../../../../context/contexts';\nimport Container from '../../../shared/Container';\nimport Player from './Player';\n\nconst Players = ({\n  canIAccuse,\n  myRole,\n  game: {\n    currentStage,\n    players,\n    redTeam,\n    keyEvidence,\n    rolesRef,\n    ghost\n  }\n}) => {\n\n  const { userId } = useContext(UserContext);\n\n  const showAsRedTeam = (redTeam, playerId) => {\n    const extractIds = (arr) => arr.map(obj => obj.id);\n    const canSeeRedTeam = ['witness', 'killer', 'accomplice'];\n    const show = canSeeRedTeam.includes(myRole)\n                 && redTeam\n                 && extractIds(redTeam).includes(playerId);\n    return show ? true : null;\n  };\n\n  const canBeTargeted = myRole === 'killer' && currentStage.id === 'second-murder';\n\n  return (\n    <Container className=\"players\">\n      <ul className=\"player-list\">\n        {players && players.map(player => {\n          if (player.id === ghost.id) return null;\n          if (player.id === userId) return null;\n          return (\n          <Player\n            key={player.id}\n            player={player}\n            myRole={myRole}\n            stage={currentStage}\n            canBeTargeted={canBeTargeted && player.role !== 'accomplice'}\n            isRedTeam={showAsRedTeam(redTeam, player.id)}\n            keyEv={keyEvidence}\n            canIAccuse={canIAccuse}\n            rolesRef={rolesRef}\n          />\n        )})}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Players;","import React, {\n  // useState,\n  // useContext,\n  // useEffect\n} from 'react';\n// import Player from '../game/Player'\nimport { badge, article } from '../../../../util/utils';\nimport Container from '../../../shared/Container';\nimport Cards from './Cards';\nimport '../../../../styles/player.css';\n\nconst BasicUI = ({\n  thisPlayer: {\n    hand,\n    role,\n    id,\n    canAccuse\n  }\n}) => {\n\n  const types = Object.keys(hand);\n\n  return (\n    <Container className='self player'>\n      {/* <li className={`p-info username`}>\n        {id.slice(0,-5)}\n      </li> */}\n      <li className={`p-info badge ${badge(canAccuse)}`}>\n        *** o7 ***\n      </li>\n      <li className={`p-info role ${role}`}>\n        <div className='wrapper'>\n          <div className='subtitle'>You are {article(role)}</div>\n          <div className={role}>{role.toUpperCase()}</div>\n        </div>\n      </li>\n      <li className={`p-info interact`}>\n      </li>\n      {types.map((type) => (\n        <Cards\n          key={type}\n          myRole={role}\n          type={`${role}UI`}\n          cardType={type}\n          cards={hand[type]}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default BasicUI;","import React, {\n  // useState,\n  useContext,\n  // useEffect\n} from 'react';\nimport { useParallelSelector } from '../../../../hooks/parallel-selector';\nimport { useGame } from '../../../../hooks/game-hook';\nimport { SocketContext } from '../../../../context/contexts';\nimport { badge, article } from '../../../../util/utils';\nimport Container from '../../../shared/Container';\nimport Button from '../../../ui-elements/Button';\nimport Cards from './Cards';\n\nconst KillerUI = ({\n  thisPlayer: {\n    hand,\n    role,\n    id,\n    canAccuse\n  },\n  stage,\n  keyEv\n}) => {\n\n  const { socket } = useContext(SocketContext);\n\n  const types = Object.keys(hand);\n\n  const {\n    selTracker,\n    minSelected,\n    selectHandler,\n    submitSelection\n  } = useParallelSelector(types);\n\n  const {\n    chooseKeyEvHandler\n  } = useGame(socket);\n\n  const keyEvBtn = () => {\n    return (\n      <Button\n        className='confirm-key-evidence'\n        onClick={() => submitSelection({cb:[chooseKeyEvHandler], reset:true})}\n        disabled={!minSelected}\n      >\n        Confirm\n      </Button>\n    );\n  };\n\n  const interact = () => {\n    if (stage.id === 'setup') return keyEvBtn();\n    return null;\n  };\n\n  return (\n    <Container className={`self player`}>\n      {/* <li className={`p-info username`}>\n        {id.slice(0,-5)}\n      </li> */}\n      <li className={`p-info badge ${badge(canAccuse)}`}>\n        *** o7 ***\n      </li>\n      <li className={`p-info role ${role}`}>\n        <div className='wrapper'>\n          <div className='subtitle'>You are {article(role)}</div>\n          <div className={role}>{role.toUpperCase()}</div>\n        </div>\n      </li>\n      <li className={`p-info interact`}>\n        {interact()}\n      </li>\n      {types.map((type) => (\n        <Cards\n          myRole={role}\n          type={`${role}UI`}\n          cardType={type}\n          key={type}\n          stage={stage}\n          cards={hand[type]}\n          selectedId={selTracker[type]?.id}\n          selectCardHandler={selectHandler}\n          isMine={true}\n          keyEv={keyEv}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default KillerUI;\n\n// {(stage.id === 'Setup') && <Button\n// className='confirm-key-evidence'\n// onClick={() => console.table(selTracker)}\n// disabled={false}\n// >\n// Confirm\n// </Button>}","import {\n  useState,\n  // useRef,\n  // useEffect,\n  useContext,\n  useCallback\n} from 'react';\nimport { UserContext, SocketContext } from '../context/contexts';\n\nexport const useChat = (chat) => {\n  const { userId } = useContext(UserContext);\n  const { socket } = useContext(SocketContext);\n\n  const [messages, setMessages] = useState(chat);\n  const [messageText, setMessageText] = useState('');\n\n  const newMessage = () => {\n    socket.current.emit('newMessage', {\n      senderId: userId,\n      text: messageText\n    });\n    setMessageText('');\n  };\n\n  // TO DO: useCB necessary?\n  const subToChat = useCallback(() => {\n\n    const sub2Chat = () => {\n      socket.current.on('newMessage', msg => {\n        setMessages((messages) => [...messages, msg]);\n      });\n    };\n    sub2Chat();\n\n  }, [socket]);\n\n  const lastAnnouncement = () => {\n    const last = messages.filter(m => m.type !== 'userMessage').slice(-1)[0];\n    const welcome = {\n      time: new Date().toLocaleTimeString().slice(0,-6),\n      type: 'welcome',\n      args: [],\n      senderId: 'app'\n    };\n    return last ? last : welcome;\n  };\n\n  const subToAnnounce = useCallback(() => {\n\n    const sub2Announce = () => {\n      socket.current.on('updateLobby', ({ msg }) => {\n        if (msg) return setMessages((messages) => [...messages, msg]);\n      });\n      socket.current.on('announcement', ({ msg }) => {\n        if (msg) return setMessages((messages) => [...messages, msg]);\n      });\n    };\n    sub2Announce();\n\n  }, [socket]);\n\n  return {\n    newMessage,\n    subToChat,\n    subToAnnounce,\n    lastAnnouncement,\n    messages,\n    messageText,\n    setMessageText\n  };\n};","// styled text\n\nimport { GAME_OUTCOMES } from '../util/utils';\n\nexport function parseAndRender({type, time, args}, meta) {\n  if (meta.parent === 'chatfeed') return renderStyledBlock(strings[type](time, ...args), meta);\n  return renderStyledText(strings[type](time, ...args), meta);\n};\n\nfunction renderStyledText(elements, meta) {\n  return (\n    <div className={meta.wrapper || 'none'}>\n      {elements.map((el, i) => {\n        if (!meta.timestamp && i === 0) return null;\n        return <span key={i} className={el.style}>{el.string}</span>\n      })}\n    </div>\n  );\n};\n\nfunction renderStyledBlock(elements, meta) {\n\n  const [style, content] = meta.isAnno\n    ? [elements[0].style, elements[0].string]\n    : [elements[0].style, elements[0].string];\n\n  return (\n    <div className={meta.wrapper || 'none'}>\n      <div className={style}>{content}</div>\n      <div className={'styled-block-text'}>\n        {elements.map((el, i) => {\n          if (i === 0) return null;\n          return <span key={i} className={el.style}>{el.string}</span>\n        })}\n      </div>\n    </div>\n  );\n};\n\nfunction parseSMDString({str}, opts) {\n  const defStyle = opts.default || 'default';\n  const st = opts.splitTextOn || '^';\n  const sc = opts.splitClsOn || '_';\n\n  const createStyleObj = (string, style = defStyle) => {\n    return { string, style }\n  };\n\n  const checkAbbr = (cls) => opts.abbr.find(e => e.abb === cls);\n\n  const arr = str.split(st).filter(e => !!e);\n\n  const result = arr.map(str => {\n\n    if (str.charAt(0) !== sc) return createStyleObj(str);\n\n    const a = str.split(sc).filter(e => !!e);\n\n    let abbr;\n    if (!!opts) abbr = checkAbbr(a[0]);\n    if (!!abbr) return createStyleObj(a[1], abbr.classname);\n\n    return createStyleObj(a[1], a[0]);\n  });\n  return result;\n};\n\nconst SMDopts = {\n  splitTextOn: '^',\n  splitClsOn: '_',\n  default: 'string',\n  abbr: [\n    {abb: 'm', classname: 'string--usermessage'},\n    {abb: 't', classname: 'string--timestamp'},\n    {abb: 'u', classname: 'string--username'},\n    {abb: 'k', classname: 'string--keyword'},\n    {abb: 'p', classname: 'string--punctuation'},\n  ]\n};\n\nconst parseSMD = ({str}) => parseSMDString({str}, SMDopts);\n\nconst name = (userId) => userId.slice(0,-5);\n\nconst cls = 'string--username '\n\nconst strings = (() => {\n\n  const waitingForJoin = (time) => {\n    const str = `_t_${time} ^Waiting for more players...`;\n    return parseSMD({str});\n  };\n\n  const waitingForReady = (time) => {\n    const str = `_t_${time} ^Waiting for everyone to be ready...`;\n    return parseSMD({str});\n  };\n\n  const waitingForStart = (time, iAmLeader) => {\n    let str;\n    iAmLeader ? str = `_t_${time} ^Ready to start...` : str = `_t_${time} ^Waiting for the leader to start the game...`\n    return parseSMD({str});\n  };\n\n  const welcome = (time) => {\n    const str = `_t_${time} ^_m_Welcome to MHK.`;\n    return parseSMD({str});\n  };\n\n  const userMessage = (time, [id, col], text) => {\n    const str = `_t_${time} ^_${cls+col}_${name(id)}^_p_: ^_m_${text}`;\n    return parseSMD({str});\n  };\n\n  const join = (time, [id, col]) => {\n    const str = `_t_${time} ^_${cls+col}_${name(id)}^ joined.`;\n    return parseSMD({str});\n  };\n\n  const leave = (time, [id, col], [leaderId, leaderCol]) => {\n    let str;\n    !!leaderId ? str = `_t_${time} ^_${cls+col}_${name(id)}^ left. ^_${cls+leaderCol}_${name(leaderId)}^ is the new leader.`\n                : str = `_t_${time} ^_${cls+col}_${name(id)}^ left.`;\n    return parseSMD({str});\n  };\n\n  const ready = (time, [id, col], ready) => {\n    const str = `_t_${time} ^_${cls+col}_${name(id)}^ is ${ready ? 'ready' : 'not ready'}.`;\n    return parseSMD({str});\n  };\n\n  const newLeader = (time, [id, col]) => {\n    const str = `_t_${time} ^_${cls+col}_${name(id)}^ is the new leader.`;\n    return parseSMD({str});\n  };\n\n  const accusation = (time, { accuser: [rId, rCol], accusee: [eId, eCol], evidence: [ev1, ev2] }) => {\n    const str = `_t_${time} ^_${cls+rCol}_${name(rId)}^ accuses ^_${cls+eCol}_${name(eId)}^ with evidence: ^_k_${ev1}^ and ^_k_${ev2}^.`;\n    return parseSMD({str});\n  };\n\n  const accusationWrong = (time, [id, col]) => {\n    const str = `_t_${time} ^_${cls+col}_${name(id)}^ is wrong.`;\n    return parseSMD({str});\n  };\n\n  const accusationRight = (time, [rId, rCol], [eId, eCol]) => {\n    const str = `_t_${time} ^_${cls+rCol}_${name(rId)}^ is correct! ^_${cls+eCol}_${name(eId)}^ is the Killer.`;\n    return parseSMD({str});\n  };\n\n  const advanceTo = (time, stage) => {\n    let str;\n    switch (stage.id) {\n      case 'setup':\n        str = `_t_${time} ^Game started. Waiting for the Killer to select key evidence...`;\n        break;\n      case 'round-1':\n        str = `_t_${time} ^Key evidence chosen. ^_k_${stage.display}^ started...`;\n        break;\n      case 'round-2-start':\n        str = `_t_${time} ^Starting ^_k_${stage.display}^. Waiting for the Ghost to choose a new scene...`;\n        break;\n      case 'round-2':\n        str = `_t_${time} ^New scene chosen. ^_k_${stage.display}^ started...`;\n        break;\n      case 'round-3-start':\n        str = `_t_${time} ^Starting ^_k_${stage.display}^. Waiting for the Ghost to choose a new scene...`;\n        break;\n      case 'round-3':\n        str = `_t_${time} ^The Ghost has selected a new scene. ^_k_${stage.display}^ started.`;\n        break;\n      case 'second-murder':\n        str = `_t_${time} ^The Killer has been identified. But they can still win if they identify the Witness...`;\n        break;\n      case 'game-over': // should never get called\n        str = `${stage.display}`\n        break;\n      default: break;\n    }\n    return parseSMD({str});\n  };\n\n  const clearGame = (time) => {\n    const str = `_t_${time} ^The lobby leader cleared the game.`;\n    return parseSMD({str});\n  };\n\n  const clueChosen = (time, clue) => {\n    const str = `_t_${time} ^Clue chosen: ^_k_${clue}^.`;\n    return parseSMD({str});\n  };\n\n  const ghostAssigned = (time, [id, col], unAssign) => {\n    let str;\n    unAssign ? str = `_t_${time} ^Ghost unassigned.`\n             : str = `_t_${time} ^_${cls+col}_${name(id)}^ is assigned to Ghost.`;\n    return parseSMD({str});\n  };\n\n  const resolveGame = (time, result) => {\n    const str = `_t_${time} ^_k_${GAME_OUTCOMES[result]}`;\n    return parseSMD({str});\n  };\n\n  return {\n    waitingForJoin, waitingForReady, waitingForStart,\n    userMessage,\n    welcome,\n    join, leave, ready,\n    ghostAssigned,\n    newLeader,\n    advanceTo,\n    resolveGame, clearGame,\n    clueChosen,\n    accusation, accusationRight, accusationWrong\n  };\n})();","// import React from 'react';\nimport { parseAndRender } from '../../../util/styled-text';\n\nconst ChatMessage = ({ parent, message, isMine }) => {\n\n  const style = isMine ? 'self' : 'other';\n\n  const meta = {\n    wrapper: `msg-wrapper msg-in-${parent} ${style}`,\n    parent: parent,\n    isAnno: message.senderId === 'app',\n    timestamp: parent === 'chatfeed' ? true : false\n  };\n\n  if (message) return parseAndRender(message, meta);\n  return null;\n};\n\nexport default ChatMessage;\n","import React, {\n  // useState,\n  useEffect,\n} from 'react';\nimport { useChat } from '../../../hooks/chat-hook';\nimport Container from '../../shared/Container';\nimport ChatMessage from '../chat/ChatMessage';\n\nimport '../../../styles/announcer.css';\nimport '../../../styles/chat.css';\n\nfunction msg(type, args, senderId = 'app') {\n  return {\n    time: new Date().toLocaleTimeString().slice(0,-6),\n    type,\n    args,\n    senderId,\n  }\n};\n\nconst Announcer = ({\n  chat,\n  iAmLeader,\n  lobby\n}) => {\n\n  const {\n    subToAnnounce,\n    lastAnnouncement\n  } = useChat(chat);\n\n  useEffect(() => { subToAnnounce(); }, [subToAnnounce]);\n\n  const [type, args] = lobby.startGameText(iAmLeader);\n\n  return (\n    <Container className='announcer'>\n      <ChatMessage\n        type='status'\n        parent='announcer'\n        message={msg(type, args)}\n      />\n      <ChatMessage\n        type='announcement'\n        parent='announcer'\n        message={lastAnnouncement()}\n      />\n    </Container>\n  );\n};\n\nexport default Announcer;","import React, {\n  useState,\n  useContext,\n  useEffect\n} from 'react';\nimport Container from '../../../shared/Container';\nimport '../../../../styles/timer.css';\nimport { SocketContext } from '../../../../context/contexts';\n// import Button from '../../../ui-elements/Button';\n\nconst Timer = ({\n  settings: {on}\n}) => {\n\n  const { socket } = useContext(SocketContext);\n\n  const inactiveDisplay = 'XX:XX';\n\n  const [timer, setTimer] = useState(inactiveDisplay);\n\n  // console.log(settings);\n\n  useEffect(() => {\n    // const s = socket.current;\n    let mounted = true;\n    console.log('mounted');\n    const subToTimer = (mounted) => {\n      if (mounted) {\n        socket.current.on('tick', (time) => {\n          setTimer(time)\n          console.log(time);\n        });\n        socket.current.on('clear', () => setTimer(inactiveDisplay));\n      }\n    };\n  subToTimer(mounted);\n  return () => mounted = false;\n  }, [socket, setTimer]);\n\n  // const pauseHandler = () => {\n  //   return socket.current.emit('pauseTimer');\n  // };\n\n  const formattedTimer = () => (\n    <p className={`time-digits ${timer === '00:00' && 'zero'}`}>\n      <span className='digits'>{timer.substr(0,2)}</span>\n      <span className='colon'>:</span>\n      <span className='digits'>{timer.substr(3,2)}</span>\n    </p>\n  )\n\n  const displayOn = () => (\n    <div className='time-wrap'>\n      {formattedTimer()}\n      {/* <div className='timer-pause-button'>\n        <Button\n          onClick={pauseHandler}\n        >PAUSE</Button>\n      </div> */}\n    </div>\n  );\n\n  const displayOff = () => (\n    <div className='time-wrap'></div>\n  );\n\n  return (\n    <Container className='timer'>\n      {on ? displayOn() : displayOff()}\n    </Container>\n  )\n}\n\nexport default Timer\n","import React, {\n  // useState,\n  // useEffect,\n  // useContext\n} from 'react';\nimport Info from './Info';\nimport MemberList from './nogame/MemberList';\nimport Setup from './nogame/Setup';\nimport Ghost from './game/Ghost';\nimport Players from './game/Players';\nimport BasicUI from './game/BasicUI';\nimport KillerUI from './game/KIllerUI';\nimport Announcer from './Announcer';\nimport Timer from './game/Timer';\n\nconst Main = ({\n  lobby,\n  thisPlayer,\n  iAmLeader,\n  lobby: {\n    gameSettings,\n    gameOn,\n    game,\n    chat,\n  }\n}) => {\n\n  return (\n    <>\n      <Announcer\n        chat={chat}\n        iAmLeader={iAmLeader}\n        lobby={lobby}\n      />\n      <Info\n        canStart={lobby.canStart()}\n        gameOn={gameOn}\n        roundNum={game && game.roundNum}\n        stage={game && game.currentStage}\n        iAmLeader={iAmLeader}\n      />\n      {!gameOn && lobby &&\n        <React.Fragment>\n          <Setup\n            iAmLeader={iAmLeader}\n            gameSettings={gameSettings}\n            lobby={lobby}\n            canStart={lobby.canStart()}\n            startGameText={lobby.startGameText(iAmLeader)}\n          />\n          <MemberList\n            users={lobby.users}\n            iAmLeader={iAmLeader}\n          />\n        </React.Fragment>\n      }\n      {gameOn && game && thisPlayer &&\n        <React.Fragment>\n\n          {thisPlayer.role !== 'ghost' &&\n          <Ghost\n            game={game}\n          />}\n\n          <Timer\n            settings={game.settings.timer}\n          />\n\n          <Players\n            game={game}\n            myRole={thisPlayer.role}\n            canIAccuse={thisPlayer.canAccuse}\n          />\n\n          {thisPlayer.role === 'ghost' &&\n          <Ghost\n            isGhostUI={true}\n            game={game}\n          />}\n\n          {(thisPlayer.role === 'hunter' ||\n            thisPlayer.role === 'witness' ||\n            thisPlayer.role === 'accomplice') &&\n          <BasicUI\n            thisPlayer={thisPlayer}\n          />}\n\n          {thisPlayer.role === 'killer' &&\n          <KillerUI\n            thisPlayer={thisPlayer}\n            stage={game.currentStage}\n            keyEv={game.keyEvidence}\n          />}\n\n        </React.Fragment>\n      }\n    </>\n  );\n};\n\nexport default Main;\n","import React, {\n  useContext,\n  useEffect,\n  useRef\n} from 'react';\nimport { UserContext } from '../../../context/contexts';\nimport ChatMessage from './ChatMessage';\nimport { nanoid } from 'nanoid';\n\nconst ChatFeed = ({ messages, users }) => {\n  const { userId } = useContext(UserContext);\n  const scrollRef = useRef();\n\n  useEffect(() => {\n    // scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight)\n    scrollRef.current?.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\",\n      inline: \"nearest\"\n    });\n  }, [messages]);\n\n  function getColorId(message) {\n    if (message.senderId === 'app') return 'default';\n    const color = users.find(u => u.id === message.senderId).color;\n    console.log(color.id);\n    if (color) return color.id;\n    console.log('error null-color');\n    return 'null-color';\n  }\n\n  return (\n    <div className='chatfeed'>\n      {messages.map((message) => (\n        <div\n          className={getColorId(message)}\n          ref={scrollRef}\n          key={nanoid()}>\n          <ChatMessage\n            parent='chatfeed'\n            message={message}\n            isMine={message.senderId === userId}\n            users={users}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatFeed;\n","import React from 'react';\nimport Button from '../../ui-elements/Button';\nimport {\n  validate,\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MAXLENGTH\n} from '../../../util/validators';\n\nconst NewMessage = ({\n  myLobby, onChange, messageText, submitHandler\n}) => {\n\n  return (\n    <React.Fragment>\n      {myLobby &&\n        <div className='new-message-wrapper'>\n          <form className='form new-message-form'>\n            <input\n              className='input new-message-input'\n              placeholder='Message'\n              onChange={onChange}\n              value={messageText}\n            ></input>\n            <Button\n              disabled={!validate(messageText,\n                [VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(280)]\n              )}\n              onClick={submitHandler}\n            >\n              Send\n            </Button>\n          </form>\n        </div>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default NewMessage;\n","import React, {\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport { UserContext } from '../../../context/contexts';\nimport { useChat } from '../../../hooks/chat-hook';\nimport Container from '../../shared/Container';\nimport ChatFeed from './ChatFeed';\nimport NewMessage from './NewMessage';\nimport Button from '../../ui-elements/Button';\n// import { HiChat } from 'react-icons/hi';\nimport '../../../styles/chat.css';\n\nconst Chat = ({ chat, users }) => {\n\n  // const minimized = true;\n  const { myLobby } = useContext(UserContext);\n\n  const [minimized, setMinimized] = useState(false);\n\n  const minimizeHandler = () => setMinimized(!minimized);\n\n  const {\n    newMessage,\n    subToChat,\n    subToAnnounce,\n    messages,\n    messageText,\n    setMessageText\n  } = useChat(chat);\n\n  useEffect(() => {\n    subToChat();\n    subToAnnounce();\n  }, [subToChat, subToAnnounce]);\n\n  const MinimizeChatButton = () => (\n    <Button\n      className='minimize-chat'\n      onClick={minimizeHandler}\n    >\n    {minimized ? 'CHAT' : 'HIDE'}\n    </Button>\n  );\n\n  if (minimized) return (\n    <Container className={`lobbychat min`}>\n      <MinimizeChatButton />\n    </Container>\n  );\n\n  const newMessageSubmitHandler = event => {\n    event.preventDefault();\n    newMessage();\n  };\n\n  return (\n    <Container className='lobbychat'>\n      <MinimizeChatButton />\n      <ChatFeed messages={messages} users={users} />\n      <NewMessage\n        onChange={(e) => setMessageText(e.target.value)}\n        messages={messages}\n        messageText={messageText}\n        myLobby={myLobby}\n        submitHandler={newMessageSubmitHandler}\n      />\n    </Container>\n  );\n};\n\nexport default Chat;","import React, {\n  // useState,\n  // useContext,\n  // useEffect\n} from 'react';\nimport Container from './Container';\nimport Button from '../ui-elements/Button';\nimport { useHttpClient } from '../../hooks/http-hook';\n\nconst Dev = ({ lobby }) => {\n\n  const { sendRequest } = useHttpClient();\n  const getDataHandler = async event => {\n    event.preventDefault();\n    try {\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/admin/data`\n      );\n      console.log(responseData);\n    } catch (err) { console.log(`GetDataHandler Error: ${err}`); };\n  };\n\n  return (\n    <Container className=\"dev\">\n      <div>\n        <Button onClick={getDataHandler}>\n          SERVER\n        </Button>\n        <Button onClick={() => console.log(lobby)}>\n          CLIENT\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Dev;\n","import React, {\n  useEffect,\n  useState,\n  useContext\n} from 'react';\n// import { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport { useIO } from '../../hooks/io-hook';\nimport { SocketContext, UserContext } from '../../context/contexts';\nimport { getThisPlayer, lobbyMethods } from '../../util/utils';\nimport ErrorModal from '../modal/ErrorModal';\nimport Loading from '../shared/Loading';\nimport Grid from '../shared/Grid';\nimport Main from './main/Main';\nimport Chat from './chat/Chat';\nimport Dev from '../shared/Dev';\n\nconst Lobby = () => {\n  console.log('%cLobby','color:#79f98e');\n  // const lobbyURL = useParams().lobbyURL;\n  const { myLobby, userId } = useContext(UserContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const { socket } = useIO(); // init socket (useEffect inside hook)\n  const [ lobby, setLobby ] = useState();\n  const [joinConfirmed, setJoinConfirmed] = useState(false);\n\n  useEffect(() => {\n    const fetchLobby = async () => {\n      try {\n        const resData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/lobby/${myLobby}`,\n          'POST',\n          JSON.stringify({\n            userId: userId\n          }),\n          { 'Content-Type': 'application/json' },\n        );\n        setLobby({...lobbyMethods, ...resData.lobby});\n      } catch (err) { console.log(err); }\n    };\n    fetchLobby();\n  }, [ sendRequest, setLobby, userId, myLobby ]);\n\n  useEffect(() => {\n    const subToLobby = () => {\n      socket.current.on('updateLobby', ({ lobby, data }) => {\n        setLobby({...lobbyMethods, ...lobby});\n        if (data?.event === 'userConnected' && data?.user.id === userId) {\n          setJoinConfirmed(true);\n        }\n      });\n    };\n  subToLobby();\n  }, [ socket, myLobby, setLobby, joinConfirmed, setJoinConfirmed, userId ]);\n\n  const thisPlayer = lobby && getThisPlayer(userId, lobby.game);\n  const gridVariant = () => {\n    return lobby.gameOn && thisPlayer.role === 'ghost' ? 'game-ghost'\n         : lobby.gameOn ? 'game'\n         : 'nogame'\n  };\n\n  return (\n    <SocketContext.Provider value={{ socket: socket }}>\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        {isLoading &&\n          <Loading\n            asOverlay\n            color='orange'\n            text='Fetching lobby...'\n          />\n        }\n        {!isLoading && !joinConfirmed &&\n          <Loading\n            asOverlay\n            color='blue'\n            text='Connecting to IO...'\n          />\n        }\n        {!isLoading && lobby && joinConfirmed &&\n          <Grid className={`lobby-${gridVariant()}`}>\n            <Main\n              lobby={lobby}\n              thisPlayer={getThisPlayer(userId, lobby.game)}\n              iAmLeader={lobby.leader === userId}\n            />\n            <Chat\n              chat={lobby.chat}\n              users={lobby.users}\n            />\n            {lobby.id === 'z' && <Dev lobby={lobby} />}\n          </Grid>\n        }\n      </React.Fragment>\n    </SocketContext.Provider>\n  );\n};\n\nexport default Lobby;","import { useRef, useEffect, useContext, useCallback } from 'react';\nimport { UserContext } from '../context/contexts';\nimport { io } from 'socket.io-client';\n\nexport const useIO = () => {\n  const { userId, myLobby } = useContext(UserContext);\n  const socket = useRef();\n\n  const initSocket = useCallback(() => {\n    socket.current = io(process.env.REACT_APP_SOCKET_URL);\n    socket.current.emit('connectToLobby', {\n      userId: userId,\n      lobbyId: myLobby,\n    });\n  }, [userId, myLobby]);\n\n  useEffect(() => {\n    initSocket();\n    return () => {\n      if (socket.current) socket.current.disconnect();\n    };\n  }, [initSocket]);\n\n  return { socket };\n};","import React, { useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../context/contexts';\nimport JoinThisLobby from './JoinThisLobby';\nimport Lobby from './Lobby';\nimport Grid from '../shared/Grid';\n\nimport '../../styles/landing.css';\n\n// Handles cases where users arrive directly at a lobby's URL\n// If user has correct session data, Lobby is loaded, else JoinThisLobby is loaded\n\nconst Foyer = () => {\n\n  const { checkMyLobby, myLobby, checked } = useContext(UserContext);\n  const lobbyURL = useParams().lobbyURL;\n  const history = useHistory();\n\n  const genURL = lobbyURL === 'lobby';\n\n  if (checked) {\n\n    if (genURL && !myLobby) {\n      history.push('/');\n      return null;\n    };\n\n    if (genURL && myLobby) return (<Lobby />);\n\n    if (!genURL) {\n\n      if (checkMyLobby(lobbyURL)) {\n        history.push('/lobby');\n        return null;\n      }\n\n    }\n\n  };\n\n  return (\n    <Grid className='foyer'>\n      <JoinThisLobby lobbyId={lobbyURL} />\n    </Grid>\n  );\n};\n\nexport default Foyer;\n","import React, {\n  // useState,\n  useContext,\n  // useEffect\n} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { UserContext } from '../../context/contexts';\nimport Container from './Container';\n\nconst Header = () => {\n\n  const { userName, userId, myLobby } = useContext(UserContext);\n\n  return (\n    <Container className=\"head\">\n      <NavLink className='navlink' to=\"/\" exact>MHK</NavLink>\n      { userId &&\n        <>\n          <NavLink className='navlink' to={`/${myLobby}`} exact>LOBBY</NavLink>\n          <span className='sessinfo'>\n            {`User: ${userName}`}\n          </span>\n          <span className='sessinfo'>\n            {`Lobby: ${myLobby === 'z' ? 'splendid-monolith-7873' : myLobby}`}\n          </span>\n        </>\n      }\n    </Container>\n  );\n};\n\nexport default Header;\n\n// Context.Consumer alternative to context hook; uses a child that is an anon function that takes context data as param and returns the sub-components/elements that will need the context data\n\n// const Header = () => {\n//   console.log('Header');\n//   return (\n//     <UserContext.Consumer>\n//       {(sess) => {\n//         return (\n//           <Container className=\"head\">\n//             <NavLink to=\"/\" exact>Landing</NavLink>\n//             <NavLink to={`/lobby/${testLobbyUrl}`} exact>Lobby</NavLink>\n//             { sess.userId &&\n//                 <span>{`${sess.userName}-${sess.userId.slice(-6)} ${sess.myLobby}`}</span>\n//             }\n//           </Container>\n//         )\n//       }}\n//     </UserContext.Consumer>\n//   );\n// };\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from '../../hooks/form-hook';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MAXLENGTH, VALIDATOR_LETTERS_ONLY } from '../../util/validators';\nimport { MAX_NAME_LEN } from '../../util/utils';\nimport { UserContext } from '../../context/contexts';\nimport Input from '../ui-elements/Input';\nimport Button from '../ui-elements/Button';\nimport Container from '../shared/Container';\nimport ErrorModal from '../modal/ErrorModal';\n// import Loading from '../shared/Loading';\nimport Grid from '../shared/Grid';\n\nconst NewLobby = () => {\n  // console.log('NewLobby');\n  const { updateUserCtx } = useContext(UserContext);\n  const { error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler] = useForm(\n    {\n      userName: { value: '', isValid: false }\n    }, false\n  );\n\n  const history = useHistory();\n\n  const newLobbySubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      // TO DO: use FormData instead of JSON?\n      // const formData = new FormData();\n      // formData.append('userName', formState.inputs.userName.value);\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/lobby/new`,\n        'POST',\n        JSON.stringify({\n          userName: formState.inputs.userName.value,\n        }),\n        { 'Content-Type': 'application/json' },\n      );\n      updateUserCtx({\n        userId: responseData.user.id,\n        userName: responseData.user.userName,\n        myLobby: responseData.user.myLobby,\n        isLeader: true,\n        leaderOf: responseData.user.myLobby\n      });\n      // 'forward' user to route of lobby\n      history.push('/lobby');\n    } catch (err) { console.log(err); }\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Container className='newlobby'>\n        {/* {isLoading && <Loading asOverlay color='red' />} */}\n        <form className='form new-lobby-form' onSubmit={newLobbySubmitHandler}>\n          <Grid className='new-lobby-form'>\n            <div className='new-lobby-title'>START NEW LOBBY</div>\n            <Input\n              id='userName'\n              element='input'\n              type='text'\n              label='Your Name'\n              placeholder='Name'\n              validators={[VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(MAX_NAME_LEN), VALIDATOR_LETTERS_ONLY()]}\n              errorText='Please enter a name.'\n              onInput={inputHandler}\n              noInvalidStyle={true}\n              className='new-lobby'\n            />\n            <Button\n              type='submit'\n              disabled={!formState.isValid}\n              className='new-lobby'\n            >\n              SUBMIT\n            </Button>\n          </Grid>\n        </form>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default NewLobby;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from '../../hooks/form-hook';\nimport { UserContext } from '../../context/contexts';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MAXLENGTH, VALIDATOR_LETTERS_ONLY } from '../../util/validators';\nimport { MAX_NAME_LEN, randomName } from '../../util/utils';\nimport ErrorModal from '../modal/ErrorModal';\n// import Loading from '../shared/Loading';\nimport Grid from '../shared/Grid';\nimport Container from '../shared/Container';\nimport Input from '../ui-elements/Input';\nimport Button from '../ui-elements/Button';\n\nconst JoinLobby = () => {\n  // console.log('JoinLobby');\n  const { updateUserCtx } = useContext(UserContext);\n  const { error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      userName: { value: '', isValid: false },\n      lobbyURL: { value: '', isValid: false }\n    }, false\n  );\n\n  function joinLobbyData(dev) {\n    const prodData = {\n      userName: formState.inputs.userName.value,\n      lobbyURL: formState.inputs.lobbyURL.value\n    };\n    const devData = {\n      userName: randomName(),\n      lobbyURL: 'z'\n    };\n    return JSON.stringify(dev ? devData : prodData); \n  }\n\n  const history = useHistory();\n\n  const joinLobbySubHandler = async (event, dev) => {\n    // console.log('joinLobbySubHandler');\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/user/new`,\n        'POST',\n        joinLobbyData(dev),\n        { 'Content-Type': 'application/json' },\n      );\n      updateUserCtx({\n        userId: responseData.user.id,\n        userName: responseData.user.userName,\n        myLobby: responseData.user.myLobby\n      });\n      // 'forward' user to route of lobby\n      history.push('/lobby');\n    } catch (err) { console.log(err); };\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Container className='joinlobby'>\n        {/* {isLoading && <Loading asOverlay color='blue' />} */}\n        <form className='form join-lobby-form' onSubmit={joinLobbySubHandler}>\n          <Grid className='join-lobby-form'>\n            <div className='join-lobby-title'>JOIN LOBBY</div>\n            <Input\n              id='userName'\n              element='input'\n              type='text'\n              label='Your Name'\n              placeholder='Name'\n              validators={[VALIDATOR_REQUIRE(), VALIDATOR_MAXLENGTH(MAX_NAME_LEN), VALIDATOR_LETTERS_ONLY()]}\n              errorText='Please enter a name.'\n              onInput={inputHandler}\n              noInvalidStyle={true}\n              className='join-lobby-username'\n            />\n            <Input\n              id='lobbyURL'\n              element='input'\n              type='text'\n              label='Lobby Name'\n              placeholder='mellow-earth-4321'\n              initialValue=''\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText='Please enter a valid lobby ID.'\n              onInput={inputHandler}\n              noInvalidStyle={true}\n              className='join-lobby-lobbyid'\n            />\n            <Button type='submit' disabled={!formState.isValid} className='join-lobby'>\n              SUBMIT\n            </Button>\n          </Grid>\n        </form>\n        <Button\n          disabled={false}\n          className='join-devlobby'\n          onClick={(e) => joinLobbySubHandler(e, true)}\n        >\n          DEV\n        </Button>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default JoinLobby;\n","import React from 'react';\nimport Grid from '../shared/Grid';\nimport Header from '../shared/Header';\nimport NewLobby from './NewLobby';\nimport JoinLobby from './JoinLobby';\n\nimport '../../styles/landing.css';\n\nconst Landing = () => {\n  // console.log('%cLanding','color:#f579f9');\n  return (\n    <Grid className='landing'>\n      <Header className='landing' />\n      <NewLobby />\n      <JoinLobby />\n    </Grid>\n  );\n};\n\nexport default Landing;\n","import React, {\n  useEffect,\n  // useRef,\n  // useState\n} from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { useUser } from './hooks/user-hook';\nimport { useHttpClient } from './hooks/http-hook';\nimport { UserContext } from './context/contexts';\nimport Foyer from './components/lobby/Foyer';\nimport Landing from './components/landing/Landing';\nimport './styles/colors.css';\nimport './styles/default.css';\n\nfunction App() {\n  console.log('%cApp','color:#79e6f9');\n  const { user, checkMyLobby, updateUserCtx } = useUser();\n  const { isLoading, sendRequest } = useHttpClient();\n\n  useEffect(() => {\n    console.log('UserHook: fetchSess');\n    const checkCookie = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/user/session`\n        );\n        updateUserCtx({\n          userId: responseData.user?.id,\n          userName: responseData.user?.userName,\n          myLobby: responseData.user?.myLobby\n        });\n      } catch (err) { console.log(err); };\n    };\n    checkCookie();\n    // setCc(true)\n  }, [updateUserCtx, sendRequest]);\n\n  let routes;\n  routes = (\n    <Switch>\n      <Route path='/' exact>\n        <Landing />\n      </Route>\n      <Route path='/:lobbyURL' exact>\n        <Foyer />\n      </Route>\n      <Route path='/lobby' exact>\n        <Foyer />\n      </Route>\n      <Redirect to='/' />\n    </Switch>\n  );\n\n  return (\n    <UserContext.Provider value={{\n      userId: user.userId,\n      userName: user.userName,\n      myLobby: user.myLobby,\n      isLeader: user.isLeader,\n      checkMyLobby: checkMyLobby,\n      updateUserCtx: updateUserCtx,\n      checked: user.checked\n    }}>\n      {!isLoading && user.checked && <Router>\n        <main className='app'>\n          {routes}\n        </main>\n      </Router>}\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","import {\n  useState,\n  // useEffect,\n  useCallback\n} from 'react';\n// import { useHttpClient } from './http-hook';\n\nexport const useUser = () => {\n  // console.log('Hook: useUser');\n  // const { sendRequest } = useHttpClient();\n  const [user, setUser] = useState({\n    userId: null,\n    userName: null,\n    myLobby: null,\n    isLeader: false,\n    leaderOf: null,\n    checked: false\n  });\n\n  const updateUserCtx = useCallback(({ userId, userName, myLobby, isLeader, leaderOf }) => {\n    // console.log('UserHook: updateUserCtx');\n    setUser({\n      userId: userId,\n      userName: userName,\n      myLobby: myLobby,\n      isLeader: !!isLeader,\n      leaderOf: leaderOf,\n      checked: true\n    })\n  }, []);\n\n  // verifies that user did not somehow load a different lobby than the one they created/joined.\n  const checkMyLobby = useCallback((currentLobby) => {\n    // console.log('checkMyLobby');\n    return (user.myLobby === currentLobby);\n  }, [user.myLobby]);\n\n  // when user arrives, checks if they have a cookie, allowing them to rejoin their lobby with the same userId\n  // useEffect(() => {\n  //   console.log('UserHook: fetchSess');\n  //   const checkCookie = async () => {\n  //     try {\n  //       const responseData = await sendRequest(\n  //         `${process.env.REACT_APP_BACKEND_URL}/user/session`\n  //       );\n  //       updateUserCtx({\n  //         userId: responseData.user.id,\n  //         userName: responseData.user.userName,\n  //         myLobby: responseData.user.myLobby\n  //       });\n  //     } catch (err) { console.log(err); };\n  //   };\n  //   checkCookie();\n  // }, [updateUserCtx, sendRequest]);\n\n  // const checkCookie = async () => {\n  //   try {\n  //     const responseData = await sendRequest(\n  //       `${process.env.REACT_APP_BACKEND_URL}/user/session`\n  //     );\n  //     updateUserCtx({\n  //       userId: responseData.user.id,\n  //       userName: responseData.user.userName,\n  //       myLobby: responseData.user.myLobby\n  //     });\n  //   } catch (err) { console.log(err); };\n  // };\n\n  // when user arrives, checks if they have a session, allowing them to rejoin their lobby with the same userId\n  // useEffect(() => {\n  //   // console.log('UserHook: fetchSess');\n  //   const fetchSess = async () => {\n  //     try {\n  //       const responseData = await sendRequest(\n  //         `${process.env.REACT_APP_BACKEND_URL}/user/session`\n  //       );\n  //       updateUserCtx({\n  //         userId: responseData.user.id,\n  //         userName: responseData.user.userName,\n  //         myLobby: responseData.user.myLobby\n  //       });\n  //     } catch (err) { console.log(err); };\n  //   };\n  //   fetchSess();\n  // }, [updateUserCtx, sendRequest]);\n\n  return {\n    user,\n    checkMyLobby,\n    updateUserCtx,\n    // checkCookie\n  };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import TestApp2 from './TestApp2';\n\n// require('log-timestamp')(function() { return new Date().toLocaleTimeString('en-US', { hour12: false }) });\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <TestApp2 />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );"],"sourceRoot":""}