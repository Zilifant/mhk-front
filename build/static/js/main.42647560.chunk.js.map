{"version":3,"sources":["hooks/http-hook.js","hooks/sess-hook.js","context/sess-context.js","hooks/form-hook.js","util/validators.js","components/ui-elements/Input.jsx","components/modal/Backdrop.jsx","components/modal/Modal.jsx","components/ui-elements/Button.jsx","components/modal/ErrorModal.jsx","components/shared/Loading.jsx","components/lobby/JoinThisLobby.jsx","components/shared/Container.jsx","components/lobby/LobbyInfo.jsx","components/shared/Grid.jsx","components/lobby/Member.jsx","components/lobby/MemberList.jsx","components/shared/Header.jsx","components/shared/Footer.jsx","components/chat/ChatMessage.jsx","components/chat/ChatFeed.jsx","components/chat/NewMessage.jsx","components/chat/Chat.jsx","components/lobby/Main.jsx","components/lobby/Lobby.jsx","hooks/socket-hook.js","components/lobby/Foyer.jsx","components/landing/NewLobby.jsx","components/landing/JoinLobby.jsx","components/landing/Landing.jsx","App.jsx","index.jsx"],"names":["useHttpClient","useState","isLoading","setIsLoading","undefined","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","console","log","httpAbortCtrl","AbortController","current","push","fetch","signal","credentials","response","json","responseData","filter","reqCtrl","ok","message","Error","useEffect","forEach","abortCtrl","abort","clearError","useSess","session","setSession","userId","setUserId","userName","setUserName","myLobby","setMyLobby","inMyLobby","setInMyLobby","leaderOf","setLeaderOf","isLeader","setIsLeader","joinLobby","leader","checkMyLobby","currentLobby","process","user","id","fetchSess","SessContext","React","createContext","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","validate","validators","validator","trim","length","val","test","inputReducer","isTouched","Input","props","initialValue","initialValid","inputState","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","className","name","rows","noInvalidStyle","htmlFor","label","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","style","headerClass","header","onSubmit","preventDefault","contentClass","children","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","to","exact","disabled","ErrorModal","onClear","Loading","asOverlay","JoinThisLobby","sess","useContext","inputHandler","JoinThisLobbySubHandler","JSON","stringify","lobbyURL","lobbyId","errorText","Container","LobbyInfo","lobbyInfo","socket","leaderId","Grid","Member","sessUserId","member","selfOther","slice","MemberList","onlineMembers","map","Header","Footer","table","ChatMessage","self","sender","text","time","ChatFeed","scrollRef","scrollIntoView","behavior","messages","ref","createdAt","nanoid","NewMessage","messageText","subHandler","Chat","chat","setMessages","setMessageText","getMessagesFromDB","on","incomingMessage","Date","toLocaleTimeString","newMessageSubHandler","emit","lobby","e","Main","Lobby","useParams","loadedLobby","setLoadedLobby","setOnlineMembers","skt","io","users","disconnect","useSocket","searchResults","fetchLobby","Foyer","NewLobby","history","useHistory","newLobbySubHandler","hk","Haikunator","haikunate","JoinLobby","joinLobbySubHandler","Landing","App","routes","path","Provider","render"],"mappings":"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","file":"static/js/main.42647560.chunk.js","sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false); // loading state\n  const [error, setError] = useState(undefined); // error state\n\n  // prevent errors if page is switched while this is loading, where we would try to update the state of a component not on the screen anymore\n  // cancel the ongoing http request using useRef hook\n  // it will turn into a reference - data that will not change / be re-initialized when the page re-renders\n  const activeHttpRequests = useRef([]);\n\n  // wrap the entire thing in `useCallback` to avoid an infinite loop (or merely an inefficient re-render cycle) if/when the component that calls this hook re-renders and would call this function again\n  const sendRequest = useCallback(async (\n    url,\n    method = 'GET',\n    body = null,\n    headers = {}\n  ) => {\n\n    console.log('HttpHook: sendRequest');\n    // console.log(url.slice(21) + ' | ' + method + ' | ' + body + ' | ' + headers);\n\n    setIsLoading(true); // to enable loading indicator in UX\n\n    const httpAbortCtrl = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrl);\n\n    try {\n      // forward the params to `fetch`\n      // console.log('HttpHook: Awaiting response...');\n      const response = await fetch(url, {\n        method: method, // could be just `method`\n        body,\n        headers,\n        signal: httpAbortCtrl.signal,\n        credentials: 'include'\n      });\n      // console.log(response);\n\n      const responseData = await response.json(); // should be the data\n      // console.log(responseData);\n\n      // if request was successful, filter out the specific AbortController for this request; we don't try to cancel a request that already completed\n      activeHttpRequests.current = activeHttpRequests.current.filter(\n        reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n      // error may result in no response; but a 'successful' response may also bring an error; to catch these errors use `ok`\n      // `ok` property of response object is true for 200ish status codes, false for 4-500ish codes\n      if (!response.ok) {\n        console.log(responseData.message);\n        throw new Error(responseData.message);\n      }\n\n      setIsLoading(false);\n      // return the data to the component that is using this hook\n      return responseData;\n\n    } catch (err) {\n      setError(err.message || 'Http-hook: something went wrong.');\n      setIsLoading(false);\n      // throw error, so that the component using this hook knows that something went wrong and to not continue\n      throw err;\n    }\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  // cleanup function\n  useEffect(() => {\n    // no effect\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};","import {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { useHttpClient } from './http-hook';\n\nexport const useSess = () => {\n  // console.log('Hook: useSess');\n  const { sendRequest } = useHttpClient();\n  const [session, setSession] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [userName, setUserName] = useState(null);\n  const [myLobby, setMyLobby] = useState(null);\n  const [inMyLobby, setInMyLobby] = useState(false);\n  const [leaderOf, setLeaderOf] = useState(null);\n  const [isLeader, setIsLeader] = useState(false);\n\n  const joinLobby = useCallback(({ userId, userName, myLobby, leaderOf }) => {\n    console.log('SessHook: joinLobby');\n    const leader = leaderOf === myLobby;\n    setSession(true);\n    setUserId(userId);\n    setUserName(userName);\n    setMyLobby(myLobby);\n    setLeaderOf(leaderOf);\n    setIsLeader(leader);\n    setInMyLobby(true);\n  }, []);\n\n  const checkMyLobby = useCallback((currentLobby) => {\n    console.log('checkMyLobby');\n    return (myLobby === currentLobby);\n  }, [myLobby]);\n\n  useEffect(() => {\n    console.log('SessHook: fetchSess');\n    const fetchSess = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/user/session`\n        );\n        joinLobby({\n          userId: responseData.user.id,\n          userName: responseData.user.userName,\n          myLobby: responseData.user.myLobby,\n          leaderOf: responseData.user.leaderOf\n        });\n        console.log(responseData)\n      } catch (err) { console.log(err); }\n    };\n    fetchSess();\n  }, [joinLobby, sendRequest]);\n\n  return { session, userId, userName, myLobby, inMyLobby, leaderOf, isLeader, checkMyLobby, joinLobby };\n};","import React from 'react';\n\n// returns an object that is not a component, but which *contains* a component, so capitalized like a component\n// set the default context here\nconst SessContext = React.createContext({\n  session: false,\n  userId: null,\n  userName: null,\n  myLobby: null,\n  inMyLobby: false,\n  isLeader: false,\n  checkMyLobby: () => {},\n  joinLobby: () => {}\n});\n\nexport default SessContext;\n\n// Context.Consumer alternative to context hook; uses a child that is an anon function that takes context data as param and returns the sub-components/elements that will need the context data\n\n// Context.Provider will crash if used with a default value, unless you also give it a `value` prop that is an object the same as the default (but this can now be changed by state and such)\n\n// context-management component\n// export const SessContextProvider = props => {\n//   return <SessContext.Provider>{props.children}</SessContext.Provider>;\n// };","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  // console.log('FormHook: formReducer');\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\n// custom hook\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  // function is declared inside the component; to prevent it from being re-declared every time time the component is re-rendered (resulting in an infinite loop), use useCallback to wrap the function and in the [] define the dependencies under which the function should be re-declared. (In this case, none.)\n  const inputHandler = useCallback((id, value, isValid) => {\n    // console.log('FormHook: inputHandler');\n    // console.log(id, value, isValid)\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    // console.log('FormHook: setFormData');\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\n// import '../styles/Input.css';\n\n// `useReducer` to manage more complex state; we pass it an action, it modifies the state depending on the action passed (the reducer function is how it modifies it) and then returns the state and re-renders stuff\n// here defined outside the component because it does not depend on any component inputs\nconst inputReducer = (state, action) => {\n  // console.log('inputReducer');\n  // console.log(state);\n  // console.log(action);\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state, // create copy of old state to save it to this new object; then we can modify individual key/values\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      }\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state; // return the unchanged state\n  }\n};\n\nconst Input = props => {\n  // can use array destructuring; like useState, this returns an array of two elements\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    // console.log('changeHandler');\n    // console.log(event.target.value);\n    // send this object with data about the change to the userReducer\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n    // console.log(event.target.value);\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  }\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler} // triggers for every keystroke\n        onBlur={touchHandler}\n        value={inputState.value}\n        className={props.className}\n      />\n    ) : (\n      <textarea\n        name=\"inputform\"\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n        className={props.className}\n      />\n    );\n\n  return (\n    <div className={`form ${\n      !props.noInvalidStyle &&\n      !inputState.isValid &&\n      inputState.isTouched &&\n      'form--invalid'\n    }`}>\n      {/* htmlFor = for in standard html (like class\\className) */}\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {/* {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>} */}\n    </div>\n  )\n}\n\nexport default Input","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\n\n// not exported, used internally (by Modal, below)\nconst ModalOverlay = props => {\n  // style and some classnames given as props allows makes component more flexible/reusable\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\n// `...props` Forwards props recieved by Modal to ModalOverlay, the internal component\n\nexport default Modal;","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import styles from '../styles/Button.module.css';\n// import '../styles/Button.css'\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        // className={`${styles.btn}`}\n        className={`btn btn--${props.className}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  };\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        // className={`${styles.btn} ${styles['btn-dash']}`}\n        className={`btn btn--${props.className}`}\n      >\n        {props.children}\n      </Link>\n    );\n  };\n  return (\n    <button\n      // className={`${styles.btn}`}\n      className={`btn btn--${props.className}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import styled from 'styled-components';\n\n// // import '../styles/Button.css';\n\n// // tagged template-literal, standard javascript\n// // `button` is a method on the `styled` object that will return a new component with the style provided in the backticks\n// const StyledButton = styled.button`\n//   -webkit-appearance: none;\n//      -moz-appearance: none;\n//           appearance: none;\n//   background-color: rgba(8,145,178,1);\n//   color: rgba(255,255,255,1);\n//   padding: .5rem 1rem;\n//   border: 3px solid rgba(8,145,178,1);\n//   border-radius: 0;\n//   margin: .5rem;\n//   text-transform: uppercase;\n\n//   &:hover {\n//     background-color: rgba(6,182,212,1);\n//     border: 3px solid rgba(6,182,212,1);\n//   }\n\n//   &:active {\n//     background-color: rgba(236,72,153,1);\n//     border: 3px solid rgba(236,72,153,1);\n//     outline: none;\n//   }\n\n//   &:focus { outline: none; }\n//   &:disabled,\n//   &:hover:disabled,\n//   &:active:disabled {\n//     background: #ccc;\n//     color: #979797;\n//     border-color: #ccc;\n//     cursor: not-allowed;\n//   }\n// `;\n\n// const Button = props => {\n//   if (props.href) {\n//     return (\n//       \n//         <a\n//           // className={`btn btn--${props.className}`}\n//           href={props.href}\n//         >\n//           {props.children}\n//         </a>\n//       \n//     );\n//   }\n//   if (props.to) {\n//     return (\n//       \n//         <Link\n//           to={props.to}\n//           exact={props.exact}\n//           // className={`btn btn--${props.className}`}\n//         >\n//           {props.children}\n//         </Link>\n//       \n//     );\n//   }\n//   return (\n//     <StyledButton\n//       // className={`btn btn--${props.className}`}\n//       type={props.type}\n//       onClick={props.onClick}\n//       disabled={props.disabled}\n//     >\n//       {props.children}\n//     \n//   );\n// };\n\n// export default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../ui-elements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;","import React from 'react';\n\nconst Loading = props => {\n  console.log('Loading');\n  return (\n    <div className={`loading ${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default Loading;","import React, { useContext } from 'react';\nimport { useForm } from '../../hooks/form-hook';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport { VALIDATOR_REQUIRE } from '../../util/validators';\nimport Input from '../ui-elements/Input';\nimport ErrorModal from '../modal/ErrorModal';\nimport Button from '../ui-elements/Button';\n// import { useSess } from '../hooks/sess-hook';\nimport SessContext from '../../context/sess-context';\nimport Loading from '../shared/Loading';\n\nconst JoinThisLobby = props => {\n  console.log('JoinThisLobby');\n  const sess = useContext(SessContext);\n  // console.log(sess);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    { userName: { value: '', isValid: false } }, false\n  );\n\n  const JoinThisLobbySubHandler = async event => {\n    console.log('JoinThisLobbySubHandler');\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/user/new`,\n        'POST',\n        JSON.stringify({\n          userName: formState.inputs.userName.value,\n          lobbyURL: props.lobbyId\n        }),\n        { 'Content-Type': 'application/json' },\n      );\n      sess.joinLobby({\n        userId: responseData.user.id,\n        userName: responseData.user.userName,\n        myLobby: responseData.user.myLobby,\n        leaderOf: responseData.user.leaderOf\n      });\n    } catch (err) { console.log(`Err: ${err}`); };\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <div>\n        {isLoading && <Loading asOverlay />}\n        <form className=\"join-this-lobby-form\" onSubmit={JoinThisLobbySubHandler}>\n          <Input\n            id=\"userName\"\n            element=\"input\"\n            type=\"text\"\n            label=\"\"\n            placeholder=\"Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a name.\"\n            onInput={inputHandler}\n            noInvalidStyle={true}\n            className=\"join-this-lobby-input\"\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            JOIN\n          </Button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default JoinThisLobby;","import React from 'react';\n\nconst Container = props => {\n  return (\n    <div className={`container con--${props.className || 'default'}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React, {\n  // useState,\n  useContext\n} from 'react';\nimport SessContext from '../../context/sess-context';\nimport Container from '../shared/Container';\n\nconst LobbyInfo = props => {\n  const sess = useContext(SessContext);\n\n  if (props.lobbyInfo === undefined) {\n    return (\n      <Container className=\"errormessage\">\n        <div>No lobby found.</div>\n      </Container>\n    );\n  };\n\n  return (\n    <Container className=\"lobbyinfo\">\n      <ul>\n        <li>{sess.userName}</li>\n        <li>{props.socket.id}</li>\n        <li>{props.lobbyInfo.leaderId}</li>\n        <li>{props.lobbyInfo.id}</li>\n      </ul>\n    </Container>\n  );\n};\n\nexport default LobbyInfo;\n","import React from 'react';\n\nconst Grid = props => {\n  return (\n    <div className={`grid grid--${props.className}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Grid\n","import React from 'react';\n\nconst Member = ({ sessUserId, member, isLeader }) => {\n\n  let selfOther = (sessUserId === member) ? 'self' : 'other';\n  // let onOffline = (onlineMembers.some(oM => oM.userId === member)) ? 'online' : 'offline';\n\n  return (\n    <li\n      className={`m-${selfOther} ${isLeader && 'm-leader'}`}\n      key={member}\n    >\n      {`${member.slice(0,-5)}-${member.slice(-4)}`}\n    </li>\n  );\n};\n\n// const Member = ({ sessUserId, memberInfo: { id } }) => {\n\n//   let sessUser = (sessUserId === id) ? 'self' : 'other';\n\n//   return (\n//     <li className={`member--${sessUser}`} key={id}>\n//       {`${id.slice(0,-5)}-${id.slice(-4)}`}\n//     </li>\n//   );\n// };\n\nexport default Member;\n","import React, {\n  // useEffect,\n  // useState,\n  useContext\n} from 'react';\n// import { useHttpClient } from '../../hooks/http-hook';\nimport SessContext from '../../context/sess-context';\nimport Container from '../shared/Container';\nimport Member from './Member';\n\nconst MemberList = ({ onlineMembers }) => {\n  console.log('MemberList');\n  const sess = useContext(SessContext);\n\n  return (\n    <Container className=\"lobbymembers\">\n      {/* {!isLoading && loadedMembers && */}\n        {/* <div className='memberlists'> */}\n          <ul className=\"member-list\">\n            {onlineMembers.map(member => (\n              <Member\n                key={member.userId}\n                member={member.userId}\n                sessUserId={sess.userId}\n                isLeader={member.isLeader}\n              />\n            ))}\n          </ul>\n          {/* <ul className=\"online-list\">\n            <div>Online:</div>\n            {props.onlineMembers.map(member => (\n              <li className={`member--${(sess.userId === member.userId) ? 'self' : 'other'}`} key={member.userId}>\n                {`${member.userId}`}\n              </li>\n            ))}\n          </ul> */}\n        {/* </div> */}\n      {/* } */}\n    </Container>\n  );\n};\n\nexport default MemberList;\n\n  // const [loadedMembers, setLoadedMembers] = useState();\n  // const {\n  //   isLoading,\n  //   // error,\n  //   sendRequest,\n  //   // clearError\n  // } = useHttpClient();\n\n  // const lobbyURL = props.lobbyInfo.lobbyURL\n\n  // useEffect(() => {\n  //   const fetchUsers = async () => {\n  //     try {\n  //       const responseData = await sendRequest(\n  //         `${process.env.REACT_APP_BACKEND_URL}/lobby/${lobbyURL}/users`\n  //       );\n  //       setLoadedMembers(responseData.users);\n  //       // setSessUserId(responseData.sessUserId);\n  //     } catch (err) { console.log(err); }\n  //   };\n  //   fetchUsers();\n  // }, [sendRequest, lobbyURL]);","import React, {\n  // useState,\n  useContext,\n  // useEffect\n} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Container from './Container';\nimport SessContext from '../../context/sess-context';\nimport JoinThisLobby from '../lobby/JoinThisLobby';\n\nconst Header = props => {\n  console.log('Header');\n\n  const { session, userId, myLobby } = useContext(SessContext);\n  // console.log(session, userId, myLobby);\n  // const [sktTr, setSktTr] = useState('');\n\n  // useEffect(() => {\n  //   if (props.socket !== undefined) {\n  //     setSktTr(props.socket.id.slice(-5));\n  //   };\n  // }, [props.socket]);\n\n  return (\n    <Container className=\"head\">\n      <NavLink className='navlink' to=\"/\" exact>Landing</NavLink>\n      { session &&\n        <NavLink className='navlink' to={`/lobby/${myLobby}`} exact>Lobby</NavLink>\n      }\n      { session &&\n        <span className='sessinfo'>{`${userId} ${myLobby}`}</span>\n      }\n      { props.className === 'lobby' && myLobby !== props.lobbyInfo.id &&\n        <JoinThisLobby lobbyId={props.lobbyInfo.id} />\n      }\n    </Container>\n  );\n};\n\nexport default Header;\n\n// Context.Consumer alternative to context hook; uses a child that is an anon function that takes context data as param and returns the sub-components/elements that will need the context data\n\n// const Header = () => {\n//   console.log('Header');\n//   return (\n//     <SessContext.Consumer>\n//       {(sess) => {\n//         return (\n//           <Container className=\"head\">\n//             <NavLink to=\"/\" exact>Landing</NavLink>\n//             <NavLink to={`/lobby/${testLobbyUrl}`} exact>Lobby</NavLink>\n//             { sess.userId &&\n//                 <span>{`${sess.userName}-${sess.userId.slice(-6)} ${sess.myLobby}`}</span>\n//             }\n//           </Container>\n//         )\n//       }}\n//     </SessContext.Consumer>\n//   );\n// };\n","import React, {\n  // useState,\n  // useContext,\n  // useEffect\n} from 'react';\nimport Container from './Container';\nimport Button from '../ui-elements/Button';\n// import SessContext from '../../context/sess-context';\n\nconst Footer = props => {\n  console.log('Footer');\n\n  // const { session, userId, myLobby } = useContext(SessContext);\n\n  return (\n    <Container className=\"foot\">\n      <Button onClick={() => console.log(props.socket)}>\n        SOCKET\n      </Button>\n      <Button onClick={() => console.table(props.onlineMembers)}>\n        ONLINE\n      </Button>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst ChatMessage = ({ self, sender, text, time }) => {\n\n  const style = self ? 'self' : 'other';\n\n  // const formatTime = (time) => {\n  //   console.log(typeof time);\n  //   if (typeof time === 'number') {\n  //     console.log(time);\n  //   }\n  // };\n  // formatTime(time);\n\n  return (\n    <div className={`chatmessage chatmessage-${style}`}>\n      <span>{time.slice(0,-6)}</span>\n      <span>{sender.slice(0,-5)}:</span>\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n","import React, {\n  useContext,\n  useEffect,\n  useRef\n} from 'react';\nimport SessContext from '../../context/sess-context';\nimport ChatMessage from './ChatMessage';\nimport { nanoid } from 'nanoid';\n\nconst ChatFeed = props => {\n  const { userId } = useContext(SessContext);\n  const scrollRef = useRef();\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [props.messages]);\n\n  return (\n    <div className='chatfeed'>\n      {props.messages.map((message) => (\n        <div ref={scrollRef} key={nanoid()}>\n          <ChatMessage\n            key={nanoid()}\n            self={message.sender === userId}\n            time={message.createdAt}\n            sender={message.sender}\n            text={message.text}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatFeed;\n","import React from 'react';\nimport Button from '../ui-elements/Button';\n\nconst NewMessage = props => {\n  return (\n    <React.Fragment>\n      {props.myLobby &&\n        <div className='form'>\n          <form className='new-message-form'>\n            <input\n              className='new-message-input'\n              placeholder='Message'\n              onChange={props.onChange}\n              value={props.messageText}\n            ></input>\n            <Button\n              disabled={!props.messageText}\n              onClick={props.subHandler}\n            >\n              Send\n            </Button>\n            {/* <Button\n              className='chat-temp'\n              type='button'\n              onClick={() => console.table(props.messages)}\n            >\n              LOG\n            </Button>\n            <Button\n              className='chat-temp'\n              type='button'\n              onClick={() => console.log(props.socket)}\n            >\n              SKT\n            </Button> */}\n          </form>\n        </div>\n      }\n    </React.Fragment>\n  )\n}\n\nexport default NewMessage\n","import React, {\n  useContext,\n  useState,\n  useEffect,\n} from 'react';\nimport ErrorModal from '../modal/ErrorModal';\n// import Loading from '../shared/Loading';\nimport Container from '../shared/Container';\nimport SessContext from '../../context/sess-context';\nimport { useHttpClient } from '../../hooks/http-hook';\n// import Button from '../ui-elements/Button';\nimport ChatFeed from './ChatFeed';\nimport NewMessage from './NewMessage';\n\nconst Chat = ({ socket, lobbyInfo: { chat, id } }) => {\n  console.log('Chat');\n\n  const { error, sendRequest, clearError } = useHttpClient();\n\n  const { userId, myLobby } = useContext(SessContext);\n\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState('');\n\n  useEffect(() => {\n    const getMessagesFromDB = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/lobby/chat/${chat}/messages`\n        );\n        setMessages(responseData);\n      } catch (err) { console.log(err); };\n    };\n    getMessagesFromDB();\n  }, [sendRequest, chat]);\n\n  useEffect(() => {\n    if (socket) socket.on('newMessage', message => {\n      const incomingMessage = {...message, createdAt: new Date().toLocaleTimeString()};\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n  }, [socket]);\n\n  const newMessageSubHandler = async event => {\n    console.log('newMessageSubHandler');\n    event.preventDefault();\n\n    socket.emit('newMessage', {\n      sender: userId,\n      text: messageText,\n      lobby: id\n    });\n\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/lobby/chat/${chat}/newmessage`,\n        'POST',\n        JSON.stringify({\n          sender: userId,\n          text: messageText,\n          createdAt: new Date().toLocaleTimeString()\n        }),\n        { 'Content-Type': 'application/json' },\n      );\n      setMessageText('');\n    } catch (err) { console.log(err); }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Container className='lobbychat'>\n        <ChatFeed messages={messages} />\n        <NewMessage\n          onChange={(e) => setMessageText(e.target.value)}\n          messageText={messageText}\n          myLobby={myLobby}\n          subHandler={newMessageSubHandler}\n          messages={messages}\n          socket={socket}\n        />\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Chat;\n\n// {myLobby &&\n//   <div className='form'>\n//     <form className='new-message-form'>\n//       <div><input\n//         className='new-message-input'\n//         placeholder='write something...'\n//         onChange={(e) => setMessageText(e.target.value)}\n//         value={messageText}\n//       ></input></div>\n//       <Button\n//         disabled={!messageText}\n//         onClick={newMessageSubHandler}\n//       >\n//         Send\n//       </Button>\n//       <Button\n//         className='chat-temp'\n//         type='button'\n//         onClick={() => console.table(messages)}\n//       >\n//         LOG\n//       </Button>\n//       <Button\n//         className='chat-temp'\n//         type='button'\n//         onClick={() => console.log(socket)}\n//       >\n//         SKT\n//       </Button>\n//     </form>\n//   </div>\n// }","import React from 'react';\nimport Container from '../shared/Container';\n\nconst Main = props => {\n  return (\n    <Container className={'lobbymain'}>\n      {props.children}\n    </Container>\n  );\n};\n\nexport default Main;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport { useSocket } from '../../hooks/socket-hook';\nimport LobbyInfo from './LobbyInfo';\nimport Grid from '../shared/Grid';\nimport MemberList from './MemberList';\nimport Header from '../shared/Header';\nimport Footer from '../shared/Footer';\nimport Loading from '../shared/Loading';\nimport ErrorModal from '../modal/ErrorModal';\nimport Chat from '../chat/Chat';\nimport { useSess } from '../../hooks/sess-hook';\nimport Main from './Main';\n\nconst Lobby = () => {\n  console.log('Lobby');\n  const sess = useSess();\n  console.log(sess);\n\n  const lobbyURL = useParams().lobbyURL;\n  const [loadedLobby, setLoadedLobby] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const { skt, onlineMembers } = useSocket();\n\n  useEffect(() => {\n    const fetchLobby = async () => {\n      console.log('fetchLobby');\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/lobby/${lobbyURL}`\n        );\n        setLoadedLobby(responseData.searchResults[0]);\n      } catch (err) { console.log(err); }\n    };\n    fetchLobby();\n  }, [sendRequest, lobbyURL]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && <Loading asOverlay />}\n      {!isLoading && loadedLobby &&\n        <Grid className='lobby'>\n          <Header\n            className='lobby'\n            lobbyInfo={loadedLobby}\n          />\n          {/* <Narrator className='lobby' /> */}\n          <LobbyInfo lobbyInfo={loadedLobby} socket={skt.current} />\n          <Main>\n            Game-state\n          </Main>\n          <MemberList\n            onlineMembers={onlineMembers}\n          />\n          <Chat\n            lobbyInfo={loadedLobby}\n            socket={skt.current}\n          />\n          <Footer\n            socket={skt.current}\n            onlineMembers={onlineMembers}\n          />\n        </Grid>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default Lobby;\n\n  // const [socket, setSocket] = useState(null)\n  // useEffect(() => {\n  //   setSocket(io('ws://localhost:8900'));\n  // }, []);\n\n  // const slog = () => {\n  //   console.log(`%cskt: ${skt}`,'color:#79f98e');\n  //   console.log(skt);\n  //   console.log(`%cskt.id: ${skt.id}`,'color:#79f98e');\n  //   console.log(skt.id);\n  //   console.log(`%cskt.current: ${skt.current}`,'color:#79f98e');\n  //   console.log(skt.current);\n  //   console.log(`%cskt.current.id: ${skt.current.id}`,'color:#79f98e');\n  //   console.log(skt.current.id);\n  // };","import {\n  useState,\n  useRef,\n  useEffect,\n  useContext,\n  // useCallback\n} from 'react';\nimport SessContext from '../context/sess-context';\n\nimport { io } from 'socket.io-client';\n\nexport const useSocket = () => {\n  console.log('useSocket');\n  const [onlineMembers, setOnlineMembers] = useState([]);\n  const { inMyLobby, userId, myLobby, isLeader } = useContext(SessContext);\n  const skt = useRef();\n\n  useEffect(() => {\n    if (inMyLobby) {\n      skt.current = io(process.env.REACT_APP_SOCKET_URL);\n\n      skt.current.emit('addUser', {\n        userId: userId,\n        lobbyId: myLobby,\n        isLeader: isLeader\n      });\n\n      skt.current.on('getUsers', users => {\n        console.table(users);\n        setOnlineMembers(users);\n      });\n    };\n\n    return () => {\n      if (skt.current) skt.current.disconnect();\n    };\n  }, [inMyLobby, userId, myLobby, isLeader]);\n\n  // const initSocket = () => {\n  //   console.log('initSocket');\n  //   skt.current = io(process.env.REACT_APP_SOCKET_URL);\n  // };\n\n  // const addUserToRoom = (room, user) => {\n  //   console.log('addUserToRoom');\n  //   skt.current.emit('addUser', {userId: user, lobbyId: room});\n  // };\n\n  // const subToUserList = () => {\n  //   console.log('subToUserList');\n  //   skt.current.on('getUsers', users => {\n  //     console.table(users);\n  //     setOnlineMembers(users);\n  //   });\n  // };\n\n  // const disconnectSocket = () => {\n  //   console.log('disconnectSocket');\n  //   if (skt.current) skt.current.disconnect();\n  // };\n\n  return {\n    skt,\n    onlineMembers\n  };\n};","import React, { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SessContext from '../../context/sess-context';\nimport JoinThisLobby from './JoinThisLobby';\nimport Lobby from './Lobby';\nimport Grid from '../shared/Grid';\nimport Container from '../shared/Container';\n\nconst Foyer = () => {\n  console.log('Foyer');\n  const lobbyURL = useParams().lobbyURL;\n  const { checkMyLobby } = useContext(SessContext);\n  const inMyLobby = checkMyLobby(lobbyURL);\n\n  if (inMyLobby) {\n    return (\n      <Lobby />\n    )\n  } else {\n    return (\n      <Grid className='foyer'>\n        <Container className='foyertitle'>\n          <div className='title'>{lobbyURL}</div>\n        </Container>\n        <Container className='foyerjoin'>\n          <JoinThisLobby lobbyId={lobbyURL} />\n        </Container>\n      </Grid>\n    )\n  };\n};\n\nexport default Foyer;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from '../../hooks/form-hook';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport { VALIDATOR_REQUIRE } from '../../util/validators';\nimport SessContext from '../../context/sess-context';\nimport Input from '../ui-elements/Input';\nimport Button from '../ui-elements/Button';\nimport Haikunator from 'haikunator';\nimport Container from '../shared/Container';\n\nconst NewLobby = () => {\n  console.log('NewLobby');\n  const sess = useContext(SessContext);\n  // console.log(sess);\n  const {\n    // isLoading,\n    // error,\n    sendRequest,\n    // clearError\n  } = useHttpClient();\n\n  const [formState, inputHandler] = useForm(\n    {\n      userName: { value: '', isValid: false }\n    }, false\n  );\n\n  const history = useHistory();\n\n  const newLobbySubHandler = async event => {\n    console.log('newLobbySubHandler');\n    event.preventDefault();\n\n    const hk = new Haikunator();\n    const lobbyURL = hk.haikunate();\n\n    try {\n      // const formData = new FormData();\n      // console.log(formData);\n      // console.log(formState.inputs.userName.value);\n      // formData.append('userName', formState.inputs.userName.value);\n      // console.log(formData);\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/`,\n        'POST',\n        // formData\n        JSON.stringify({\n          userName: formState.inputs.userName.value,\n          lobbyURL: lobbyURL\n        }),\n        { 'Content-Type': 'application/json' },\n      );\n      sess.joinLobby({\n        userId: responseData.user.id,\n        userName: responseData.user.userName,\n        myLobby: responseData.user.myLobby,\n        leaderOf: responseData.user.leaderOf\n      });\n      history.push('/lobby/' + lobbyURL);\n    } catch (err) { console.log(err); }\n  }\n\n  return (\n    <Container className='newlobby'>\n      <form className='new-lobby-form' onSubmit={newLobbySubHandler}>\n        <Input\n          id='userName'\n          element='input'\n          type='text'\n          label='Your Name'\n          placeholder='Name'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a name.'\n          onInput={inputHandler}\n          noInvalidStyle={true}\n        />\n        <Button type='submit' disabled={!formState.isValid} className='newbutton'>\n          NEW LOBBY\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default NewLobby;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from '../../hooks/form-hook';\nimport { useHttpClient } from '../../hooks/http-hook';\nimport { VALIDATOR_REQUIRE } from '../../util/validators';\nimport Input from '../ui-elements/Input';\nimport ErrorModal from '../modal/ErrorModal';\nimport Button from '../ui-elements/Button';\nimport Container from '../shared/Container';\n// import { useSess } from '../hooks/sess-hook';\nimport SessContext from '../../context/sess-context';\nimport Loading from '../shared/Loading';\n\nconst JoinLobby = () => {\n  console.log('JoinLobby');\n  const sess = useContext(SessContext);\n  // console.log(sess);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      userName: { value: '', isValid: false },\n      lobbyURL: { value: '', isValid: false }\n    }, false\n  );\n\n  const history = useHistory();\n\n  const joinLobbySubHandler = async event => {\n    console.log('joinLobbySubHandler');\n    event.preventDefault();\n\n    // let response;\n    // try {\n    //   response = await sendRequest(\n    //     `${process.env.REACT_APP_BACKEND_URL}/lobby/${formState.inputs.lobbyURL.value}`\n    //   );\n    // } catch (err) { console.log(err); };\n\n    try {\n      const responseData = await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/user/new`,\n        'POST',\n        JSON.stringify({\n          userName: formState.inputs.userName.value,\n          lobbyURL: formState.inputs.lobbyURL.value\n        }),\n        { 'Content-Type': 'application/json' },\n      );\n      sess.joinLobby({\n        userId: responseData.user.id,\n        userName: responseData.user.userName,\n        myLobby: responseData.user.myLobby,\n        leaderOf: responseData.user.leaderOf\n      });\n      history.push('/lobby/' + responseData.lobby.lobbyURL);\n    } catch (err) { console.log(`Err: ${err}`); };\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Container className='joinlobby'>\n        {isLoading && <Loading asOverlay />}\n        <form className='join-lobby-form' onSubmit={joinLobbySubHandler}>\n          <Input\n            id='userName'\n            element='input'\n            type='text'\n            label='Your Name'\n            placeholder='Name'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a name.'\n            onInput={inputHandler}\n            noInvalidStyle={true}\n          />\n          <Input\n            id='lobbyURL'\n            element='input'\n            type='text'\n            label='Lobby ID'\n            placeholder='mellow-earth-4321'\n            initialValue=''\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a valid lobby ID.'\n            onInput={inputHandler}\n            noInvalidStyle={true}\n          />\n          <Button type='submit' disabled={!formState.isValid}>\n            JOIN LOBBY\n          </Button>\n        </form>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default JoinLobby;\n","import React from 'react';\nimport Grid from '../shared/Grid';\nimport Header from '../shared/Header';\nimport NewLobby from './NewLobby';\nimport JoinLobby from './JoinLobby';\n\nconst Landing = () => {\n  return (\n    <Grid className='landing'>\n      <Header className='landing' />\n      <NewLobby />\n      <JoinLobby />\n    </Grid>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { useSess } from './hooks/sess-hook';\nimport SessContext from './context/sess-context';\nimport Foyer from './components/lobby/Foyer';\nimport Landing from './components/landing/Landing';\nimport './styles/default.css';\n\nfunction App() {\n  console.log('App');\n  const { session, userId, userName, myLobby, inMyLobby, isLeader, checkMyLobby, joinLobby } = useSess();\n\n  let routes;\n  routes = (\n    <Switch>\n      <Route path='/' exact>\n        <Landing />\n      </Route>\n      <Route path='/lobby/:lobbyURL' exact>\n        <Foyer />\n      </Route>\n      <Redirect to='/' />\n    </Switch>\n  );\n\n  return (\n    <SessContext.Provider value={{\n      session: session,\n      userId: userId,\n      userName: userName,\n      myLobby: myLobby,\n      inMyLobby: inMyLobby,\n      isLeader: isLeader,\n      checkMyLobby: checkMyLobby,\n      joinLobby: joinLobby\n    }}>\n      <Router>\n        <main>\n          {routes}\n        </main>\n      </Router>\n    </SessContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import TestApp2 from './TestApp2';\n\n// require('log-timestamp')(function() { return new Date().toLocaleTimeString('en-US', { hour12: false }) });\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   // <React.StrictMode>\n//     <TestApp2 />,\n//   // </React.StrictMode>,\n//   document.getElementById('root')\n// );"],"sourceRoot":""}